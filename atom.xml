<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>忍者工坊</title>
  
  
  <link href="https://nijialin.com/atom.xml" rel="self"/>
  
  <link href="https://nijialin.com/"/>
  <updated>2024-02-17T12:42:06.764Z</updated>
  <id>https://nijialin.com/</id>
  
  <author>
    <name>NiJia Lin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何設定 Cloud Function 2nd gen 來改善截圖爬蟲的效率！</title>
    <link href="https://nijialin.com/2024/02/13/gcp-cloud-function-gen2-with-line-bot/"/>
    <id>https://nijialin.com/2024/02/13/gcp-cloud-function-gen2-with-line-bot/</id>
    <published>2024-02-13T13:34:01.000Z</published>
    <updated>2024-02-17T12:42:06.764Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景介紹"><a href="#背景介紹" class="headerlink" title="背景介紹"></a>背景介紹</h1><p><img src="https://nijialin.com/images/2024/gcp/1.png"></p><p>過年改寫了我自己的在台北常使用的路上攝影機截圖工具，一開始求方便在每次請求來時會在容器當中開啟 chrome 去截圖，但由於是 MVP 以及沒有放 queue 在前面讓請求排隊，因此這樣的做法就無法提供給別人使用。</p><p>因此為了可用性，需要把截圖功能透過排程(cronjob)去實作，所以這次就將截圖功能改搬到 Cloud Function 並搭配 Cloud Scheduler 排程抓取。</p><span id="more"></span><blockquote><p>感謝 @timfanda35 協助糾正錯誤，Cloud Run 也可以透過 Scheduler 來觸發 - <a href="https://cloud.google.com/run/docs/triggering/using-scheduler">Running services on a schedule</a></p></blockquote><p>過往我很習慣在 Cloud Run 上實作任何的功能，這次也是第一次實際操作 Cloud Function，以下就介紹一下兩者是如何搭配使用的！</p><h2 id="台北板場截圖-LINE-Bot"><a href="#台北板場截圖-LINE-Bot" class="headerlink" title="台北板場截圖 LINE Bot"></a>台北板場截圖 LINE Bot</h2><blockquote><p>參考上一篇文章：<a href="https://nijialin.com/2023/11/13/line-bot-capture-image-cloud-run/">在 Google Cloud Run 上安裝 Chromium 抓取 CCTV 影像</a></p></blockquote><p><img src="https://qr-official.line.me/sid/L/556trgib.png"></p><h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>以下會簡介 Cloud Function 操作完後如何銜接 Cloud Run 的步驟，那就繼續往下看吧！</p><h2 id="建立第一個-Cloud-Function"><a href="#建立第一個-Cloud-Function" class="headerlink" title="建立第一個 Cloud Function"></a>建立第一個 Cloud Function</h2><p><img src="https://nijialin.com/images/2024/gcp/2.png"></p><p>前往 <a href="https://console.cloud.google.com/functions/list?hl=zh-tw">Cloud Function</a>，並在介面上按下<mark>建立函式</mark>，即可看到相關畫面</p><h2 id="直接線上搭配-Cloud-Shell-開始寫程式測試！"><a href="#直接線上搭配-Cloud-Shell-開始寫程式測試！" class="headerlink" title="直接線上搭配 Cloud Shell 開始寫程式測試！"></a>直接線上搭配 Cloud Shell 開始寫程式測試！</h2><p><img src="https://nijialin.com/images/2024/gcp/3.png"></p><p>把基本資訊設定完後，Cloud Function 這邊跟其他 FaaS 差不多，都有提供編輯界面供撰寫。而這邊夠更棒的是，GCP 的服務很多是搭配 Cloud Shell 讓功能可以在<strong>部署前先測試</strong>好，確認沒問題再部署上去，讓小本開發的我們可以避免來回部署花費了很多流量 💰🤣</p><h2 id="寫完-Cloud-Function-了，那-2nd-Gen-有什麼用？"><a href="#寫完-Cloud-Function-了，那-2nd-Gen-有什麼用？" class="headerlink" title="寫完 Cloud Function 了，那 2nd Gen 有什麼用？"></a>寫完 Cloud Function 了，那 2nd Gen 有什麼用？</h2><p><img src="https://nijialin.com/images/2024/gcp/4.png"></p><p>部署完後進來看看 Cloud Function，會發現上面怎麼會有個<strong>第二代</strong>的字眼，簡單來說是 Google 把 Cloud Function 整合進 Cloud Run，過往 Function 也是另外起 Container 沒錯，但在雲平台上看起來就是兩個不同的服務，藉由這樣整合也讓 Function 能使用到 Cloud Run 上面的很多好處，也可以從介面上直接通往 Cloud Run 開始操作。</p><p>相關操作範例如：「Eventarc、處理來自 Cloud Storage 或 BigQuery 的長請求、更多的 Cloud Events、併發處理…etc」</p><blockquote><p>更多介紹:<br><a href="https://cloud.google.com/blog/products/serverless/introducing-the-next-generation-of-cloud-functions">Supercharge your event-driven architecture with new Cloud Functions (2nd gen)</a> &gt; <a href="https://cloud.google.com/functions/docs/concepts/version-comparison">Cloud Functions version comparison</a></p></blockquote><h2 id="Cloud-Function-怎麼去-Cloud-Run？"><a href="#Cloud-Function-怎麼去-Cloud-Run？" class="headerlink" title="Cloud Function 怎麼去 Cloud Run？"></a>Cloud Function 怎麼去 Cloud Run？</h2><p><img src="https://nijialin.com/images/2024/gcp/5.png"></p><p>此外也能從介面上直接點選 🍔 直接前往 Cloud Run 設定，或是想要複製更多 Function 讓 Cloud Scheduler 使用，也都是沒有問題的！</p><h2 id="換過去有什麼差？"><a href="#換過去有什麼差？" class="headerlink" title="換過去有什麼差？"></a>換過去有什麼差？</h2><p><img src="https://nijialin.com/images/2024/gcp/6.png"></p><p>來到這邊之後就會跟原本使用 Cloud Run 的習慣一樣了 👏，想設定任何的 Cloud Event 或是調整和容器相關的係數，皆能在這邊操作，就不用分兩個畫面去調整了～</p><h2 id="如何在-Cloud-Run-上看？"><a href="#如何在-Cloud-Run-上看？" class="headerlink" title="如何在 Cloud Run 上看？"></a>如何在 Cloud Run 上看？</h2><p><img src="https://nijialin.com/images/2024/gcp/6.png"></p><p>在 Cloud Run 中也能知道這個容器是透過誰來 Build，如此一來也不用擔心說會不會改天就忘了 🤣</p><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>這邊我的實作方式是在本地端先跑過一次 Code，再把程式轉貼上 Cloud Function 去測試，但這手動的步驟有點不優，往後若有開發上能夠讓體驗更好，我在另外寫一篇文章介紹，那就大家下回見囉！</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;背景介紹&quot;&gt;&lt;a href=&quot;#背景介紹&quot; class=&quot;headerlink&quot; title=&quot;背景介紹&quot;&gt;&lt;/a&gt;背景介紹&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2024/gcp/1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;過年改寫了我自己的在台北常使用的路上攝影機截圖工具，一開始求方便在每次請求來時會在容器當中開啟 chrome 去截圖，但由於是 MVP 以及沒有放 queue 在前面讓請求排隊，因此這樣的做法就無法提供給別人使用。&lt;/p&gt;
&lt;p&gt;因此為了可用性，需要把截圖功能透過排程(cronjob)去實作，所以這次就將截圖功能改搬到 Cloud Function 並搭配 Cloud Scheduler 排程抓取。&lt;/p&gt;</summary>
    
    
    
    <category term="GCP" scheme="https://nijialin.com/categories/GCP/"/>
    
    
    <category term="Google" scheme="https://nijialin.com/tags/Google/"/>
    
    <category term="GCP" scheme="https://nijialin.com/tags/GCP/"/>
    
    <category term="Cloud Run" scheme="https://nijialin.com/tags/Cloud-Run/"/>
    
    <category term="Cloud Function" scheme="https://nijialin.com/tags/Cloud-Function/"/>
    
    <category term="Cloud Scheduler" scheme="https://nijialin.com/tags/Cloud-Scheduler/"/>
    
  </entry>
  
  <entry>
    <title>如何在主流前端框架上設定 GTM? 怎麼有些資料看起來沒收到?</title>
    <link href="https://nijialin.com/2024/01/28/google-analytics-and-tag-manager-setting-with-frontend-framework/"/>
    <id>https://nijialin.com/2024/01/28/google-analytics-and-tag-manager-setting-with-frontend-framework/</id>
    <published>2024-01-28T14:40:38.000Z</published>
    <updated>2024-01-30T04:26:32.045Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/2024/ga/0.jpeg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由於現在主流前端框架(Next, Nuxt)皆會透過 Virtual DOM 的方式渲染網站，在網站當中像是 class 就會有類似 <code>class=&quot;qwe-1234&quot;</code> 的呈現方式，且會階層往下，但這在 google analytics 當中抓資料會有問題，因為跟一般 SPA 網站渲染方式呈現比較不同</p><span id="more"></span><h2 id="延伸閱讀：Why-Virtual-DOM"><a href="#延伸閱讀：Why-Virtual-DOM" class="headerlink" title="延伸閱讀：Why Virtual DOM?"></a>延伸閱讀：Why Virtual DOM?</h2><blockquote><p>Next 或 Nuxt 前端框架使用 virtual DOM 的主要原因是為了提升網頁的效能和開發體驗。virtual DOM 是一種用 JavaScript 物件來模擬真實 DOM 的技術，它可以減少對真實 DOM 的操作，從而避免不必要的 reflow 或 repaint，這些過程會消耗瀏覽器的資源。virtual DOM 還可以利用 diff 演算法來計算出新舊 virtual DOM 之間的差異，並只更新有變動的部分，這樣可以進一步提高效率。<br>除了效能的優勢，virtual DOM 也可以讓開發者更方便地處理資料和畫面的變化，而不需要直接操作 DOM API。這樣可以減少程式碼的複雜度，並提高可讀性和可維護性。virtual DOM 還可以實現服務端渲染 (SSR)，這對於 SEO 和首頁載入速度有很大的幫助。</p></blockquote><h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>假設我想在 GA 中監控事件以下範例:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;qwe-123&#x27;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;asd-456&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&#x27;accountSetting&#x27;</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>我們會想在 GTM 後台設定抓取 <code>id=&#39;accountSetting&#39;</code>，設定就會跟以下很像：</p><p><img src="https://nijialin.com/images/2024/ga/1.png"></p><p>接著到 Tag Assistant (preview page) 中開啟 Debug mode 時，會發現事件似乎沒有被 Fire，以下先附上應該要成功的畫面：</p><p><img src="https://nijialin.com/images/2024/ga/4.png"></p><p>把事件點開之後才發現，怎麼內容都放在 Click Element(?) 初步猜測應該是 Virtual DOM 壓縮後讓 GA 找不到對應的欄位，因此將內容都放入 Element 當中，參考如下：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="symbol">  event:</span> <span class="string">&quot;gtm.click&quot;</span>,</span><br><span class="line"><span class="symbol">  gtm:</span> &#123;</span><br><span class="line"><span class="symbol">    uniqueEventId:</span> <span class="number">16</span>,</span><br><span class="line"><span class="symbol">    start:</span> <span class="number">1706415086221</span>, <span class="comment">// 開始時間</span></span><br><span class="line"><span class="symbol">    element:</span> <span class="string">&quot;HTMLImageElement: html &gt; body &gt; div#__next &gt; div.css-xg&quot;</span> +</span><br><span class="line">             <span class="string">&quot;fukl &gt; div.css-79njnh &gt; a.css-s401k6#accountSetting &gt; img&quot;</span>,</span><br><span class="line"><span class="symbol">    elementClasses:</span> <span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="symbol">    elementId:</span> <span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="symbol">    elementTarget:</span> <span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="symbol">    elementUrl:</span> <span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="symbol">    historyChangeSource:</span> <span class="string">&quot;pushState&quot;</span>,</span><br><span class="line"><span class="symbol">    oldUrl:</span> <span class="string">&quot;https://用戶訪問實際網址&quot;</span>,</span><br><span class="line"><span class="symbol">    newUrl:</span> <span class="string">&quot;https://應該是首頁&quot;</span>,</span><br><span class="line"></span><br><span class="line">    ...其餘監控資料</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="symbol">  eventCallback:</span> <span class="string">&quot;Function&quot;</span></span><br><span class="line"></span><br><span class="line">  ...其他自第義的內容</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>經驗分享：在越接近首頁位置的 html id 以及 class 會被放到 Element ID(Class) 欄位當中，但隨著網頁的商業邏輯越來越多，包多層之後 GTM 會搞混，因此建議方式還是可以從 Element 裡面抓</p></blockquote><p>因此這邊能解的方式如下：</p><p><img src="https://nijialin.com/images/2024/ga/2.png"></p><p>透過 <code>CSS Selector</code> 來指定想 tracking 的 HTML tag，但這邊需要 Double confirm 的地方是，有時候實作上後面的階層可能不一定有東西，因此這邊能做的方式大概為:</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#accountSetting, #accountSetting *</span><br></pre></td></tr></table></figure><blockquote><p>在 GTM CSS Selector 這邊可以用 <code>,</code> 來劃分條件，空白+<code>*</code> 則是代表後面不論接什麼，只要 ID &#x3D; accountSetting 就能 fire tracking，</p></blockquote><h2 id="Page-Path-的-contains-設定"><a href="#Page-Path-的-contains-設定" class="headerlink" title="Page Path 的 contains 設定"></a>Page Path 的 contains 設定</h2><p>建議使用 <code>contains</code>，因為可能會因為不同網站導流而在後面放了許多參數，只要路徑有符合就可以收進來<br><img src="https://nijialin.com/images/2024/ga/3.png"></p><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>會發現這個操作方式是發現，設定了十幾個 click tracking event，結果只有幾個有成功，與同事合力才發現原來有前端框架的 Virtual DOM 影響的問題。</p><p>往後若想透過GA來收集用戶行為時，記得要先知道前端是如何構建而成，SPA or Web framework，才能知道自己抓的東西能夠符合團隊需求喔！</p><blockquote><p>預祝大家資料都能被好好的 tracking，數據收滿滿!!</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2024/ga/0.jpeg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;由於現在主流前端框架(Next, Nuxt)皆會透過 Virtual DOM 的方式渲染網站，在網站當中像是 class 就會有類似 &lt;code&gt;class=&amp;quot;qwe-1234&amp;quot;&lt;/code&gt; 的呈現方式，且會階層往下，但這在 google analytics 當中抓資料會有問題，因為跟一般 SPA 網站渲染方式呈現比較不同&lt;/p&gt;</summary>
    
    
    
    <category term="學習紀錄" scheme="https://nijialin.com/categories/%E5%AD%B8%E7%BF%92%E7%B4%80%E9%8C%84/"/>
    
    
    <category term="Google" scheme="https://nijialin.com/tags/Google/"/>
    
    <category term="GTM" scheme="https://nijialin.com/tags/GTM/"/>
    
    <category term="GA" scheme="https://nijialin.com/tags/GA/"/>
    
    <category term="Google Analytics" scheme="https://nijialin.com/tags/Google-Analytics/"/>
    
  </entry>
  
  <entry>
    <title>【雪之忍法帖】白馬滑雪旅程雜記</title>
    <link href="https://nijialin.com/2024/01/06/snowboarding-2023-to-2024/"/>
    <id>https://nijialin.com/2024/01/06/snowboarding-2023-to-2024/</id>
    <published>2024-01-06T07:16:13.000Z</published>
    <updated>2024-01-27T13:03:35.282Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/2024/snowboard/DCDC9CA0-4FAB-4F1D-9A92-BF8A14FFFED9.jpg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>大約在 9~10 月安排了這次跨年滑雪的旅程，以下就跟大家分享這次大約的花費，給未來想去白馬滑雪的朋友參考囉！</p><h1 id="TL-DR-大致花費"><a href="#TL-DR-大致花費" class="headerlink" title="TL;DR 大致花費"></a>TL;DR 大致花費</h1><ul><li><p>跨年機票 12&#x2F;27 - 1&#x2F;4 的國泰航空機票買了 16,000</p></li><li><p>一天住宿費大概在 1,500</p><span id="more"></span></li><li><p>一日券：6000 yen，大概台幣 1500</p></li><li><p>夜滑：4200 yen，大約台幣 1000</p></li><li><p>雪板&#x2F;雪鞋&#x2F;安全帽：五天 20,000 yen，一天大約台幣 1,100</p></li><li><p>長野-白馬巴士：大概 300 台幣一趟</p></li><li><p>東京-長野新幹線：2000 台幣</p></li></ul><h1 id="交通-東京-長野-白馬"><a href="#交通-東京-長野-白馬" class="headerlink" title="交通: 東京 - 長野 - 白馬"></a>交通: 東京 - 長野 - 白馬</h1><p>滑雪前因為有其他行程在東京，因此我先從 klook 上預約買了 <strong>東京-長野</strong> 以及 <strong>長野-東京</strong> 的，這邊手續費會被收 300-400 元，而回程因為不好訂票，需在 klook 重複訂幾次，klook app 上有個操作陷阱需要小心</p><blockquote><p>假設訂了 1&#x2F;3 沒成功，按了重新預定之後會在一兩秒後換成訂票當時的下週，當時我就太相信 app 且按太快，只能怪自己沒仔細看，如果有使用 klook 訂票要注意這問題唷！<br>但若是淡季去，建議就在現場買吧！不會被抽手續費唷</p></blockquote><p>關於長野如何到白馬，可以參考 <a href="https://www.alpico.co.jp/tc/timetable/nagano/r-nagano-hakuba/">ALPICO 的網站</a>，裡頭有中文介面，看著 <mark>长野站东口 ➡️ 白马八方巴士总站</mark> 即可，時間上看沒有預約的就好，這樣到現場排隊就可以了</p><h1 id="住宿-パルズイン雷鳥民宿"><a href="#住宿-パルズイン雷鳥民宿" class="headerlink" title="住宿 - パルズイン雷鳥民宿"></a>住宿 - パルズイン雷鳥民宿</h1><p><img src="https://nijialin.com/images/2024/snowboard/A8C5C045-0DA3-4C49-9678-A875FA1423AB.jpg"></p><p>這次 <a href="https://www.airbnb.com.tw/rooms/749618942384864422?source_impression_id=p3_1704449841_LgnAPsH9/fNsed5t">パルズイン雷鳥</a> 我是在 Airbnb 上訂的，這邊早餐會在前一天詢問預計幾點吃，早餐量也是一定讓你吃飽飽，晚餐也可以在裡面付費，附近沒啥吃的，在這裡吃也很美味～</p><p>此外可以在這裡買雪票，5500 yen 一張白馬五龍一日券(500 保證金)、共用衛浴有泡澡池、洗衣服 300 yen、烘乾 100 yen&#x2F;30 mins、有烘乾室、有雪場接駁車(走路比較快但爬山累)</p><blockquote><p>附近走路 15 mins 才有 7-11，因此去的話建議把宵夜跟補給品一次買齊</p></blockquote><h1 id="白馬五龍場地狀況"><a href="#白馬五龍場地狀況" class="headerlink" title="白馬五龍場地狀況"></a>白馬五龍場地狀況</h1><p><img src="https://nijialin.com/images/2024/snowboard/92350069-77F1-4F8D-9BA2-CBFCCD202389.jpg"></p><p>2023&#x2F;12 日本這邊是暖冬，因此今年雪其實不夠多，整體滑起來很像在滑冰塊(快接近小叮噹的人造雪)，但很幸運的在跨年夜滑從下雨換成下雪，至少補充的雪，也讓照片看起來比較美了～～</p><h1 id="坐到山頂先去看看雪地版本的地藏王"><a href="#坐到山頂先去看看雪地版本的地藏王" class="headerlink" title="坐到山頂先去看看雪地版本的地藏王"></a>坐到山頂先去看看雪地版本的地藏王</h1><p><img src="https://nijialin.com/images/2024/snowboard/8A4361C3-4B51-4450-82EE-0293AB2FFB6D.jpg"></p><p>來白馬五龍一定要來看一次山頂的地藏王，這次附近的雪量也算還行，不過因為不太懂爬山跟調整呼吸的技巧，導致這次上去有點缺氧，但整體來說有一次很棒的體驗！推薦大家千里迢迢坐車來，別忘了來山頂看看喔</p><h1 id="滑雪狀態"><a href="#滑雪狀態" class="headerlink" title="滑雪狀態"></a>滑雪狀態</h1><p><img src="https://nijialin.com/images/2024/snowboard/A60AAACA-1F2B-4516-86F0-047FB8D148F0.jpg"></p><p>理論上寫在已經在雪季了，但也因為暖冬所以雪量不夠，但身為滑雪愛好者們來這面也是很瘋狂，排隊也都沒在客氣，五龍新手區排隊應該都需要 5~10 mins，靠近午餐時間都會比較好排些，建議大家身上可以放些巧克力之類即時補充，等大家吃完再去吃，排隊也不用排這麼久。</p><p>雪場吃飯平均應該要花 2000 yen 左右，但來這邊也沒啥東西能吃，都來了還是在這邊吃吧！</p><p>這邊雪場可以滑到白馬 47 那邊，早上熱身完可以先滑過去吃飯，然後搭回山上再回白馬五龍～</p><h1 id="跨年夜-我可終於等到雪了！"><a href="#跨年夜-我可終於等到雪了！" class="headerlink" title="跨年夜: 我可終於等到雪了！"></a>跨年夜: 我可終於等到雪了！</h1><p><img src="https://nijialin.com/images/2024/snowboard/ECC593B7-3F2D-417A-9559-DB241FA90472.jpg"></p><p>這次白馬相關的 IG 都有寫說在五龍會有跨年煙火，當天夜滑 4200 yen 可以滑到 11:30(平常只到 9:00) 相當划算，我大概滑到 10:30 下去民宿洗澡換衣服再回來，時間算的都剛剛好～</p><h1 id="突發事件：-地震"><a href="#突發事件：-地震" class="headerlink" title="突發事件： 地震"></a>突發事件： 地震</h1><p><img src="https://nijialin.com/images/2024/snowboard/003BF295-A275-4C60-8141-0728598A470E.png"></p><p>因為之後要去其他地方滑雪，因此先安裝了 <strong>承換 NAVITIME</strong>，結果當天要地震前 app 一直推播通知，這點日本真的做得非常好，讓日本國內的民眾都可以快速接收到訊息 👍</p><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p><img src="https://nijialin.com/images/2024/snowboard/C2FA518A-C020-4C65-9330-9F55967C8B48.jpg"></p><p>希望以上內容給預計有想之後跨年滑雪的讀者們參考參考，這次體驗也非常棒！雖然花了不少錢，但真的買到很多快樂 😆，那就後續的文章再繼續分享新東西給大家囉！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2024/snowboard/DCDC9CA0-4FAB-4F1D-9A92-BF8A14FFFED9.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;大約在 9~10 月安排了這次跨年滑雪的旅程，以下就跟大家分享這次大約的花費，給未來想去白馬滑雪的朋友參考囉！&lt;/p&gt;
&lt;h1 id=&quot;TL-DR-大致花費&quot;&gt;&lt;a href=&quot;#TL-DR-大致花費&quot; class=&quot;headerlink&quot; title=&quot;TL;DR 大致花費&quot;&gt;&lt;/a&gt;TL;DR 大致花費&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;跨年機票 12&amp;#x2F;27 - 1&amp;#x2F;4 的國泰航空機票買了 16,000&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一天住宿費大概在 1,500&lt;/p&gt;</summary>
    
    
    
    <category term="日記" scheme="https://nijialin.com/categories/%E6%97%A5%E8%A8%98/"/>
    
    
    <category term="Japan" scheme="https://nijialin.com/tags/Japan/"/>
    
    <category term="Snowboard" scheme="https://nijialin.com/tags/Snowboard/"/>
    
  </entry>
  
  <entry>
    <title>2023  Personal Review</title>
    <link href="https://nijialin.com/2023/12/23/nijia-2023-review/"/>
    <id>https://nijialin.com/2023/12/23/nijia-2023-review/</id>
    <published>2023-12-23T04:42:18.000Z</published>
    <updated>2024-01-05T10:03:45.839Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/2023/20231222_222229_ninja_cat.jpg"></p><h1 id="🐔-前言"><a href="#🐔-前言" class="headerlink" title="🐔 前言"></a>🐔 前言</h1><p>趁出國跨年之前來整理今年的一些事情，期許 2024 年的自己可以持續跨出舒適圈</p><p>自覺自己是一個很反骨的個性，不喜歡被定義就是<code>怎樣怎樣</code>的人，因此今年對我來說就是一直跨出舒適圈的一年，對我來說非常有趣，但偶爾有時候也是覺得自己到底在幹嘛，把自己搞這麼累 😄 因此也要適度地透過各種方式來平衡自己的身心健康 (<del>花錢就對了</del>)</p><span id="more"></span><h1 id="🦉-心態轉換"><a href="#🦉-心態轉換" class="headerlink" title="🦉 心態轉換"></a>🦉 心態轉換</h1><p>我覺得這最重要，因此還是要放前面點 👀️ 。進入三十歲之後，有種該為什麼負責的感覺浮現上來：</p><ul><li>許多事情與話在發生之前，總是會先想下它後面帶來的後果到底是什麼？做&#x2F;看到事前需要思考前因後果，在心中盤旋，像是跳舞一樣，需要先算好接下來的節拍大概會怎麼走，讓每一件小事能夠更好的被執行</li><li>今年一直感應不到成就感這件事，直到接觸到滑雪與滑板。一直對於自己運動學習能力相當有自信的我，居然會在這兩個運動上非常受挫，重新考驗自己在<strong>平衡</strong>上的控制力，也有種重新對於任何事情燃起鬥志的感覺</li><li>開始注重自身的需求，今年發生了很嚴重的胃食道逆流，把自己搞超慘，因此很多時候也開始要挑著吃了，不能想到什麼就要開吃<ul><li>但很多時候為了給自己心情好，就…………🎉️</li></ul></li><li>如果不知道當下該怎麼辦才好，就將時間安排好，按表操課，時間會帶你去你該到的地方 (<a href="https://nijialin.com/2023/11/22/nijia-30-years-old-4-quarter/">人生過了三分之一，做點紀錄</a>)</li><li>任何學習的東西都不會沒用，現在的所有選擇皆是過去點點所累積的，千萬別小看自己學的一切</li></ul><h1 id="🐳-工作上的挑戰"><a href="#🐳-工作上的挑戰" class="headerlink" title="🐳 工作上的挑戰"></a>🐳 工作上的挑戰</h1><ul><li><p>從年初的 TECHPULSE，親身經歷與學習許多專案的眉角，在隕石飛來飛去情況下還是讓研討會順利舉辦 🎉️ 現場人流來了 1400 位左右，也讓同仁們可以有個很棒的演講環境！經歷了兩屆的內部畢業展，今年首次將 TECH FRESH 畢業分享會對外，讓畢業的同學能夠有一個活動幫自己在 LINE 的實習生涯畫下個完美句點，擁有一個屬於實習生的活動。也讓這個空間能夠擠下 80 位參加者 🎉️</p></li><li><p>經歷了兩屆的內部畢業展，今年首次將 TECH FRESH 畢業分享會對外，讓畢業的同學能夠有一個活動幫自己在 LINE 的實習生涯畫下個完美句點，擁有一個屬於實習生的活動。也讓這個空間能夠擠下 80 位參加者 🎉️</p></li><li><p>下半年首度挑戰帶產品的專案，初期皆須要花上非常多時間去釐清與互相學習各種開發的習慣，希望這產品能夠越來越好，但既然還沒上線就之後再來分享經驗嚕！</p></li></ul><blockquote><p>今年也很感謝主管們的愛戴，拿了兩次的 spot bonus，讓我在挑戰不同 role 下還能夠被認可，無疑是對我職涯非常棒的推動力！</p></blockquote><h1 id="下班後-🎮🎿"><a href="#下班後-🎮🎿" class="headerlink" title="下班後 🎮🎿"></a>下班後 🎮🎿</h1><ul><li><p>買了小時候最喜歡打的快打旋風，剛好在他出新的時候跟上購買，經歷過瘋狂的研究後，也終於抵達人生第一次玩遊戲抵達最高的牌位 - 白金，雖然後續陸續時間沒調整好，加上需要大量練習而停擺，但這也是個非常棒的經驗！</p></li><li><p>另一個目前很喜歡的運動 - 滑板，一開始加入目標只是為了可以幫助我加強滑雪的技能而買了衝浪滑板，再玩了一陣子之後忽然愛上了地形帶來的誘惑。經驗不夠在美堤滑板場想玩 J 台，太相信自己運動神經下結果摔進醫院急診，搞得自己整個月右腳都怪怪的。 <a href="https://nijialin.com/2023/10/26/skateboard-rainbow-park/">【滑板】彩虹輪狀車練習場道路指引</a></p></li><li><p>而後來買了二手技術板來玩，忽然就著了魔似的一直玩，但因為玩它除了地形外，接下來就是要會玩到輪胎離開地面的動作，想想也是非常的高風險，因此在看同事也去請教練交網球學新技能，自己也找了教練來教學，讓自己的基礎可以打穩之後再來陸續挑戰更難的招式，希望滑雪玩回來之後不要放棄這個運動 👀️</p></li></ul><blockquote><p><a href="https://maps.app.goo.gl/i2FSt9AztSkuLiH78">滑板地圖清單</a></p></blockquote><h1 id="🎲-近期的體悟"><a href="#🎲-近期的體悟" class="headerlink" title="🎲 近期的體悟"></a>🎲 近期的體悟</h1><p>「<mark>價值是跟自己比，旁邊只是參考</mark>」：許多人喜歡各種比較薪水、環境、背景等等，但我想每個人的生活跟成長歷程都不同，不可同期比較，或許大家物以類聚，但終究對手還是自己，如果在當下很努力了卻也沒獲得自認的相對價值，那我相信去其他地方一定可以找到更適合自己的位置。</p><blockquote><p>不論是工作、運動、感情…etc</p></blockquote><p>「<mark>堅持下去</mark>」：去年陪著準備英文，本來以為自己會中斷，結果就持續在 Cambly 堅持到現在了，剛好在專案上也需要跟英文很好的韓國人對口，也讓我在溝通上至少不會怕了，盡可能的表達自己的需求，畢竟大家都不是 native，先怕就輸了！</p><blockquote><p>現在的成就，是過去的種種累積起來的，學的東西都不會沒用，總有一天會用到它</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2023/20231222_222229_ninja_cat.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;🐔-前言&quot;&gt;&lt;a href=&quot;#🐔-前言&quot; class=&quot;headerlink&quot; title=&quot;🐔 前言&quot;&gt;&lt;/a&gt;🐔 前言&lt;/h1&gt;&lt;p&gt;趁出國跨年之前來整理今年的一些事情，期許 2024 年的自己可以持續跨出舒適圈&lt;/p&gt;
&lt;p&gt;自覺自己是一個很反骨的個性，不喜歡被定義就是&lt;code&gt;怎樣怎樣&lt;/code&gt;的人，因此今年對我來說就是一直跨出舒適圈的一年，對我來說非常有趣，但偶爾有時候也是覺得自己到底在幹嘛，把自己搞這麼累 😄 因此也要適度地透過各種方式來平衡自己的身心健康 (&lt;del&gt;花錢就對了&lt;/del&gt;)&lt;/p&gt;</summary>
    
    
    
    <category term="日記" scheme="https://nijialin.com/categories/%E6%97%A5%E8%A8%98/"/>
    
    
  </entry>
  
  <entry>
    <title>【GCP】Pub/Sub Python 實戰紀錄 | DevFest 2023 台中工作坊</title>
    <link href="https://nijialin.com/2023/11/26/gcp-pubsub-python/"/>
    <id>https://nijialin.com/2023/11/26/gcp-pubsub-python/</id>
    <published>2023-11-26T14:52:34.000Z</published>
    <updated>2023-12-22T07:29:39.451Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/2023/pubsub/OIG.jpeg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>此篇文章為 <a href="https://gdg.community.dev/events/details/google-gdg-taichung-presents-devfest-taichung-2023/">2023&#x2F;12&#x2F;09 DevFest Taichung Serverless workshop</a> 步驟文章，如果有需要透過 GCP Pub&#x2F;Sub 將訊息轉打給訂閱的 Cloud Run endpoint，可以參考看看這篇文章喔！</p><span id="more"></span><h1 id="前置準備"><a href="#前置準備" class="headerlink" title="前置準備"></a>前置準備</h1><ul><li>需要有 GCP 的帳戶，有綁信用卡可開啟服務，且需要開啟個專案</li><li>需要有 LINE 帳號，且要能登入 <a href="https://developers.line.biz/console/">LINE Developer Console</a><ul><li>要能開啟一個 Provider + Channel</li></ul></li></ul><blockquote><p>範例專案：<a href="https://github.com/gcp-serverless-workshop/notifier-line-bot/tree/main">gcp-serverless-workshop&#x2F;notifier-line-bot</a></p></blockquote><h2 id="本地開發參考以下步驟"><a href="#本地開發參考以下步驟" class="headerlink" title="本地開發參考以下步驟"></a>本地開發參考以下步驟</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.<span class="keyword">com</span>:gcp-serverless-workshop/notifier-<span class="built_in">line</span>.git</span><br><span class="line"><span class="keyword">cd</span> notifier-<span class="built_in">line</span>/</span><br><span class="line"><span class="keyword">python3</span> -<span class="keyword">m</span> venv venv</span><br><span class="line"><span class="keyword">source</span> venv/bin/activate</span><br><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h1 id="服務使用介紹"><a href="#服務使用介紹" class="headerlink" title="服務使用介紹"></a>服務使用介紹</h1><p><img src="https://nijialin.com/images/2023/pubsub/1.png"></p><p>首先到 GCP 上的 <a href="https://console.cloud.google.com/cloudpubsub/topic/create">Pub&#x2F;Sub 服務</a>中按下<strong>建立主題</strong>，這邊很貼心的下方也有加上晚點會使用到的 topic name</p><p><img src="https://nijialin.com/images/2023/pubsub/2.png"></p><p>進到 Topic 頁面，往下滑找到<strong>建立訂閱項目</strong>，建立一個<strong>項目 ID</strong>，稍候測試與設定會需要用它</p><p><img src="https://nijialin.com/images/2023/pubsub/3.png"></p><h2 id="部署-Cloud-Run"><a href="#部署-Cloud-Run" class="headerlink" title="部署 Cloud Run"></a>部署 Cloud Run</h2><p>接著來到工作坊的專案 <a href="https://github.com/gcp-serverless-workshop/notifier-line-bot">gcp-serverless-workshop&#x2F;notifier-line-bot</a> 下，按下下方的部署按鈕，接下來會進入 Cloud Shell 的部分</p><p><img src="https://nijialin.com/images/2023/pubsub/cloudshell.png"></p><blockquote><p>Cloud Shell 有上限：<a href="https://cloud.google.com/shell/docs/quotas-limits">https://cloud.google.com/shell/docs/quotas-limits</a></p></blockquote><p>跟 cloud build 有關皆需要以下權限 (<a href="https://cloud.google.com/run/docs/deploying-source-code#permissions_required_to_deploy">URL</a>)</p><ul><li>Cloud Build Editor role</li><li>Artifact Registry Admin role</li><li>Storage Admin role</li><li>Cloud Run Admin role</li><li>Service Account User role</li></ul><h2 id="LINE-Bot-建立與設定-Cloud-Run-環境變數"><a href="#LINE-Bot-建立與設定-Cloud-Run-環境變數" class="headerlink" title="LINE Bot 建立與設定 Cloud Run 環境變數"></a>LINE Bot 建立與設定 Cloud Run 環境變數</h2><p>接著是建立官方帳號，詳細步驟請參考 <a href="https://developers.line.biz/en/docs/messaging-api/getting-started/#step-one-enable-use-of-messaging-api">LINE Developers 官方文件</a>，主要我們要做到可以<a href="https://developers.line.biz/en/docs/messaging-api/building-bot/#setting-webhook-url">設定 webhook URL 這個部分</a>，把剛剛佈署完的 Cloud Run 網址複製到 Webhook 欄位上： <code>https://CLOUD_RUN_URL/webhooks/line</code> (如果是使用這個<a href="https://github.com/gcp-serverless-workshop/notifier-line">範例專案</a>)</p><p><img src="https://nijialin.com/images/2023/pubsub/6.png"></p><ul><li>需要到 <a href="https://manager.line.biz/">Official Account Manager</a>將 LINE Bot 群組功能打開，以供測試使用</li><li>將 LINE Bot 的 ACCESS—TOKEN 以及 SECRET 放入 Cloud Run 環境變數中<ul><li>LINE_CHANNEL_ACCESS_TOKEN&#x3D;your_line_channel_access_token</li><li>LINE_CHANNEL_SECRET&#x3D;your_line_channel_secret</li></ul></li><li>把 Event 當中的 LINE 群組 ID 存下來放在 Cloud Run 環境變數中<ul><li>LINE_GROUP_ID&#x3D;</li></ul></li></ul><h2 id="回到-GCP-Pub-x2F-Sub-上"><a href="#回到-GCP-Pub-x2F-Sub-上" class="headerlink" title="回到 GCP Pub&#x2F;Sub 上"></a>回到 GCP Pub&#x2F;Sub 上</h2><p><img src="https://nijialin.com/images/2023/pubsub/4.png"></p><p>這部份把 Cloud Run 的 Domain 設定到 訂閱項目 ID(Subscribe Topic ID)上，進入到上圖的畫面，按下<strong>編輯</strong></p><p><img src="https://nijialin.com/images/2023/pubsub/5.png"></p><p>把傳送類型從 <strong>提取</strong> -&gt; <strong>推送</strong>，並且把**端點網址(Endpoint)**換成 Cloud Run 的 Domain，並加上 <code>/sub</code> (專案設定的路徑)</p><h2 id="寫一個-pub-py-來試試看"><a href="#寫一個-pub-py-來試試看" class="headerlink" title="寫一個 pub.py 來試試看"></a>寫一個 pub.py 來試試看</h2><p>參考 <a href="https://github.com/gcp-serverless-workshop/notifier-line-bot/blob/main/pub.py">gcp-serverless-workshop&#x2F;notifier-line</a>，我們可以針對線上環境去 pub data 去 topic，其中有些需要注意的：</p><ul><li>需到 GCP Service Accounts 中拿取一把金鑰，<code>放到本專案當中</code>，是 JSON 格式，並且把路徑置換<ul><li>第 9 行：<code>os.environ[&#39;GOOGLE_APPLICATION_CREDENTIALS&#39;] = &#39;YOUR_GCP_CA_PATH&#39;</code><ul><li>開啟終端機，執行 <code>pwd</code>，並且把檔案名字加在路徑後方</li></ul></li></ul></li><li>第 12 行：project_id &#x3D; “換成你 GCP Project ID”</li><li>第 13 行：topic_id &#x3D; “你剛剛建立的 TOPIC ID”</li></ul><h2 id="測試看看"><a href="#測試看看" class="headerlink" title="測試看看"></a>測試看看</h2><p><img src="https://nijialin.com/images/2023/pubsub/code.png"></p><p>接著可以在本地端 <code>python pub.py</code> 來把消息疼過 GCP CRED 打上去 Pub&#x2F;Sub，接下來看一下訊息有沒有轉打到 Cloud Run。</p><blockquote><p>如果測試發現有任何環節看不到，可以先在本地端把 API Server 起起來，然後用 ngrok 之類代理本地服務去測試，並且把 Pub&#x2F;Sub 服務的網址先換掉來 debug，接著再看看 pub.py 是否有東西沒準備好</p></blockquote><blockquote><p>ngrok 可以參考這篇文章 - <a href="https://ithelp.ithome.com.tw/articles/10249308">Day 20 GCP 公有雲_雲端事件消息傳遞服務實戰 - Pub&#x2F;Sub 組建測試之路</a></p></blockquote><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p><img src="https://nijialin.com/images/2023/pubsub/intro.jpeg"></p><p>由於這次工作坊中的範例專案是先以 LINE 群組推播為主(Push Message)，因此在環境變數中會先有一個 <strong>LINE_GROUP_ID</strong> 來指定推送，如果有其他需求可以把 Flex Message 以及 Push Message 換成你想要的內容喔！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2023/pubsub/OIG.jpeg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;此篇文章為 &lt;a href=&quot;https://gdg.community.dev/events/details/google-gdg-taichung-presents-devfest-taichung-2023/&quot;&gt;2023&amp;#x2F;12&amp;#x2F;09 DevFest Taichung Serverless workshop&lt;/a&gt; 步驟文章，如果有需要透過 GCP Pub&amp;#x2F;Sub 將訊息轉打給訂閱的 Cloud Run endpoint，可以參考看看這篇文章喔！&lt;/p&gt;</summary>
    
    
    
    <category term="GCP" scheme="https://nijialin.com/categories/GCP/"/>
    
    
    <category term="Python" scheme="https://nijialin.com/tags/Python/"/>
    
    <category term="LINE" scheme="https://nijialin.com/tags/LINE/"/>
    
    <category term="Google" scheme="https://nijialin.com/tags/Google/"/>
    
    <category term="GCP" scheme="https://nijialin.com/tags/GCP/"/>
    
    <category term="Pub/Sub" scheme="https://nijialin.com/tags/Pub-Sub/"/>
    
  </entry>
  
  <entry>
    <title>人生過了三分之一，做點紀錄</title>
    <link href="https://nijialin.com/2023/11/21/nijia-30-years-old-4-quarter/"/>
    <id>https://nijialin.com/2023/11/21/nijia-30-years-old-4-quarter/</id>
    <published>2023-11-21T16:48:29.000Z</published>
    <updated>2023-11-21T16:48:29.226Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/2023/skateboard/S__15876103.jpg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>想想最近又到了年末了，過往都會幫自己的一年做個結尾，但我覺得人生過了三分之一應該要經常的幫自己更新一下，避免未來開始忘東忘西時，卻忘了自己這陣子所獲得的一些寶貴經驗～</p><span id="more"></span><h1 id="近期一週行程-早、中、晚"><a href="#近期一週行程-早、中、晚" class="headerlink" title="近期一週行程(早、中、晚)"></a>近期一週行程(早、中、晚)</h1><ol><li>健身、上班、滑板</li><li>健身、上班、滑板、上英文課</li><li>睡飽、上班、打掃、上英文課</li><li>健身、上班、羽球社(滑板)</li><li>睡飽、上班、滑板<ol><li>近期太多參訪早上都不練 👀</li></ol></li><li>滑板、逛街、寫專案、打遊戲</li><li>滑板、逛街、寫專案、打遊戲</li></ol><p>之前寫過一篇「<a href="https://nijialin.com/2023/10/26/skateboard-rainbow-park/">【滑板】彩虹輪狀車練習場道路指引</a>」，為了年底滑雪去玩滑板，但自己實在太愛玩雙邊平衡，因此就跑來玩技術版，但因為摔太嚴重信心不足，只好請教練來幫我練動作…這邊還是很推薦各種運動初期別為了省錢，導致後面受傷傷錢又傷身 🥲，有點年紀了不能這樣摔。</p><blockquote><p>滑板同時也認識了很多同好，雖然以前都想著這些人應該很難接近，但加入這文化之後才發現他迷人的地方，但任何或運動都一樣，該給人家尊重的地方還是要給夠喔！</p></blockquote><h1 id="工作上的整理"><a href="#工作上的整理" class="headerlink" title="工作上的整理"></a>工作上的整理</h1><p>近期有機會帶專案，雖然性質跟正規專案有點不同，但也因此學了很多技能，也請教了許多公司的前輩，除了基本的敏捷流程以外，也學會整理資訊，讓作為 TPM 角色的我可以對整個專案的狀態更清晰，而不是淪為一個報告機器人的角色，這也讓我在工作的目標上做了一個很大的突破！也在這當中學習到許多合作的細節，讓雙方都能能在最短時間內抓到問題的重點，就算當中有些內容想了很氣，但還是要先回歸主題，到底要的東西是什麼…未來若有機會再來好好的分享過程。</p><h1 id="有什麼遺憾嗎？"><a href="#有什麼遺憾嗎？" class="headerlink" title="有什麼遺憾嗎？"></a>有什麼遺憾嗎？</h1><p>雖然人生過了三分之一，到了人生的其中一個 milestone，身邊很多同學都在結婚生小孩，但想想在這這年紀還可以玩自己喜歡的事情真的滿難得的！目標也是多多培養自己多元的興趣，除了工作上的努力，也要幫自己，並幫助自己重回那熱情滿滿的狀態，避免燃燒殆盡。</p><p>同時也覺得，人生在此時此刻的選擇上沒有一定的對錯，可能會對這陣子的某個行為覺得不應該，但我想這就是人生一部分，過去的點滴造就了現在的自己，想想他是未來的養分，應該就不會那麼的糾結過去那錯誤的選擇了，選錯再調整嘛～哪有什麼一定的對吧！</p><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>雖然最近過的有點太滋潤了，但我想人生中許多時候就是要多多平衡一下自己身心理的狀態，在可控制的情況下我認為作些踰矩的事情是合理的</p><ul><li>不開心想吃東西但怕胖？吃</li><li>最近穿著都很黯淡？買</li><li>家具缺點什麼更好些？買</li></ul><p>以上也分享最近的一些心態上以及近期的狀態，歡迎分享你的點子跟觀點喔！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2023/skateboard/S__15876103.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;想想最近又到了年末了，過往都會幫自己的一年做個結尾，但我覺得人生過了三分之一應該要經常的幫自己更新一下，避免未來開始忘東忘西時，卻忘了自己這陣子所獲得的一些寶貴經驗～&lt;/p&gt;</summary>
    
    
    
    <category term="日記" scheme="https://nijialin.com/categories/%E6%97%A5%E8%A8%98/"/>
    
    
  </entry>
  
  <entry>
    <title>處理 Python 中的 ImportError: cannot import name &#39;url_quote&#39; from &#39;werkzeug.urls</title>
    <link href="https://nijialin.com/2023/11/20/python-flask-url-quote-import-error-werkzeug/"/>
    <id>https://nijialin.com/2023/11/20/python-flask-url-quote-import-error-werkzeug/</id>
    <published>2023-11-20T04:22:49.000Z</published>
    <updated>2023-11-20T04:22:49.503Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/common.jpeg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>近期總算有空寫一些 side project，當然同時也會來 maintain 有在使用的專案，但因為過去都使用 Flask(近期都 FastAPI)，有些Code年久失修，或是有升級版本，都會造成 Cloud Run 上的佈署失敗，以下就提供解法給大家。</p><span id="more"></span><h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>今天再翻新之前寫的 code，過去是使用 flask 撰寫 <a href="https://github.com/louis70109/line-bot-gitbub-actions-receiver">GitHub Link</a></p><p>因為本來只想說增加個 <a href="https://github.com/louis70109/line-bot-gitbub-actions-receiver/blob/master/controller/line_controller.py#L106">LINE Bot 的判斷式</a>，結果發現 log 一直出現<code>&quot;ImportError: cannot import name &#39;url_quote&#39; from &#39;werkzeug.urls&#39;&quot;</code></p><p>經過了搜尋之後發現可能是 Werkzeug 可能有升版本造成的，近期似乎升到 3.x.x，但由於我使用的 Flask 框架只吃到 2.2.x 版本，因此只要把以下兩個版本<a href="https://github.com/louis70109/line-bot-gitbub-actions-receiver/blob/master/requirements.txt#L9">鎖住在 requirements.txt</a> 就沒問題囉！</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Flask</span>==<span class="number">2</span>.<span class="number">2</span>.<span class="number">2</span></span><br><span class="line"><span class="attribute">Werkzeug</span>==<span class="number">2</span>.<span class="number">2</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure><blockquote><p>參考 <a href="https://stackoverflow.com/questions/77213053/why-did-flask-start-failing-with-importerror-cannot-import-name-url-quote-fr">stack overflow</a></p></blockquote><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>大家在做完 side project 時可以使用 <code>pip freeze &gt; requirements.txt</code> 把版本鎖起來喔！這樣才會避免出現像我一樣的問題 😆</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/common.jpeg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;近期總算有空寫一些 side project，當然同時也會來 maintain 有在使用的專案，但因為過去都使用 Flask(近期都 FastAPI)，有些Code年久失修，或是有升級版本，都會造成 Cloud Run 上的佈署失敗，以下就提供解法給大家。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://nijialin.com/categories/Python/"/>
    
    
    <category term="Python" scheme="https://nijialin.com/tags/Python/"/>
    
    <category term="Flask" scheme="https://nijialin.com/tags/Flask/"/>
    
  </entry>
  
  <entry>
    <title>在 Google Cloud Run 上安裝 Chromium 抓取 CCTV 影像</title>
    <link href="https://nijialin.com/2023/11/13/line-bot-capture-image-cloud-run/"/>
    <id>https://nijialin.com/2023/11/13/line-bot-capture-image-cloud-run/</id>
    <published>2023-11-13T08:57:13.000Z</published>
    <updated>2023-11-13T08:57:13.047Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/common.jpeg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>近期因為有玩滑板，而且身處台北很容易下雨，因此需要找到加入了交流社群，其中設定了一些指令可以讓社群機器人可以提供 CCTV 的畫面，但其中因為需要去社群當中打指令對於一個剛加入的人有點害羞，有這些攝影機畫面真的可以幫助看是否要出門(大部分場地都室外)，但身為工程師會想要按個按鍵就出現，因此就有以下文章囉！</p><span id="more"></span><h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><h2 id="安裝-Chromium-在-Container-上"><a href="#安裝-Chromium-在-Container-上" class="headerlink" title="安裝 Chromium 在 Container 上"></a>安裝 Chromium 在 Container 上</h2><ol><li>很多人應該在測試時因為歷史關係，環境都已經有安裝，因此在 <code>requirements.txt</code> 上需要裝上:</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">selenium</span></span><br><span class="line"><span class="attribute">webdriver</span>-manager</span><br><span class="line"><span class="attribute">chromedriver</span>-binary==<span class="number">77</span>.<span class="number">0</span>.<span class="number">3865</span>.<span class="number">40</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><ol start="2"><li>參考我的 Dockerfile (<a href="https://github.com/gcp-serverless-workshop/notifier-line/blob/main/Dockerfile#L6">URL</a>):</li></ol><blockquote><p>參考來自 <a href="https://dev.to/googlecloud/using-headless-chrome-with-cloud-run-3fdp">dev.to</a></p></blockquote><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">RUN</span> apt-get update</span><br><span class="line"><span class="attribute">RUN</span> apt-get install -y gconf-service libasound<span class="number">2</span> libatk<span class="number">1</span>.<span class="number">0</span>-<span class="number">0</span> libcairo<span class="number">2</span> libcups<span class="number">2</span> libfontconfig<span class="number">1</span> libgdk-pixbuf<span class="number">2</span>.<span class="number">0</span>-<span class="number">0</span> libgtk-<span class="number">3</span>-<span class="number">0</span> libnspr<span class="number">4</span> libpango-<span class="number">1</span>.<span class="number">0</span>-<span class="number">0</span> libxss<span class="number">1</span> fonts-liberation libappindicator<span class="number">1</span> libnss<span class="number">3</span> lsb-release xdg-utils</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Chrome</span></span><br><span class="line"><span class="attribute">RUN</span> wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd<span class="number">64</span>.deb</span><br><span class="line"><span class="attribute">RUN</span> dpkg -i google-chrome-stable_current_amd<span class="number">64</span>.deb; apt-get -fy install</span><br></pre></td></tr></table></figure><p>如此一來就可以在 <a href="https://github.com/gcp-serverless-workshop/notifier-line/blob/main/utils/image.py#L21">Container 上使用 Selenium </a>操作了，接下來當然就放在 API 去使用，以下講解一些在 LINE Bot 上使用需要的注意事項。</p><blockquote><p>感謝公司的 QA 同事大力協助，真的是術業有專攻！</p></blockquote><h2 id="在-LINE-Bot-上需要的注意事項"><a href="#在-LINE-Bot-上需要的注意事項" class="headerlink" title="在 LINE Bot 上需要的注意事項"></a>在 LINE Bot 上需要的注意事項</h2><ol><li>輸出圖片需要提供 URL (<a href="https://developers.line.biz/en/reference/messaging-api/#image-message">API Doc</a>)，這邊大家可以參考我過去寫的文章-<a href="https://nijialin.com/2022/10/02/upload-image-get-url-ways/#%E6%87%89%E7%94%A8-LINE-Bot-%E6%94%B6%E5%88%B0%E5%9C%96%E7%89%87%E5%BE%8C%E5%82%B3%E5%88%B0-GitHub-%E4%B8%A6%E4%BD%BF%E7%94%A8">應用 - LINE Bot 收到圖片後傳到 GitHub 並使用</a>，透過 <strong>Base64</strong> 的方式從 GitHub API 上傳到 Repo 中</li><li>注意: Repo 要記得是 <strong>Public</strong> 喔! 否則 LINE Server 會讀不到檔案</li><li>網址組成為: <code>f&quot;https://raw.githubusercontent.com/&#123;USER&#125;/&#123;REPO_NAME&#125;/&#123;master || main&#125;/&#123;IMAGE_NAME&#125;.png&quot;</code>，記得別用到網頁上看到的名字喔！</li><li>建議使用 Push Message 的方式發出(可搭配回覆訊息 Quote 功能)，因為抓圖片以及上傳其實很花時間<ol><li>如果回傳速度比較快，或許可以寫判斷式把 Reply 以及 Push Message 兩個搭配使用</li></ol></li></ol><blockquote><p>我自己日常紀錄的東西都放在<a href="https://github.com/louis70109/ideas-tree">這個 Repo</a></p></blockquote><h2 id="佈署在-Cloud-Run"><a href="#佈署在-Cloud-Run" class="headerlink" title="佈署在 Cloud Run"></a>佈署在 Cloud Run</h2><p>因為需要將 FastAPI 佈署在 Google Cloud Run 上面會需要測試，大家有需要可以參考我的<a href="https://github.com/gcp-serverless-workshop/notifier-line/blob/main/Dockerfile">Dockerfile</a>，建議使用 <code>uvicorn</code>，目前使用 <code>gunicorn</code> 遇到滿多問題還不知道怎麼排解，如果有相關經驗歡迎分享喔！</p><p>除了在本地端使用 gcloud Command line 佈署，也可以透過 Cloud Shell 的方式佈署，而在我的 Repo 上都有<a href="https://github.com/gcp-serverless-workshop/notifier-line#google-cloud-platform-%E4%BD%88%E7%BD%B2">設定一鍵佈署</a>，可以直接從 GitHub 直接跳到 GCP 的 Cloud Shell 上操作，相當方便!</p><blockquote><p>如果有需要一直測試佈署上去的環境，建議 Cloud Shell 使用時別急著關閉，可以重複把 Cloud Shell 裡的 Repo 重新 Pull 並且佈署，否則會踩到<strong>開啟 Shell 上限</strong>喔！</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/common.jpeg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;近期因為有玩滑板，而且身處台北很容易下雨，因此需要找到加入了交流社群，其中設定了一些指令可以讓社群機器人可以提供 CCTV 的畫面，但其中因為需要去社群當中打指令對於一個剛加入的人有點害羞，有這些攝影機畫面真的可以幫助看是否要出門(大部分場地都室外)，但身為工程師會想要按個按鍵就出現，因此就有以下文章囉！&lt;/p&gt;</summary>
    
    
    
    <category term="LINE" scheme="https://nijialin.com/categories/LINE/"/>
    
    
    <category term="LINE" scheme="https://nijialin.com/tags/LINE/"/>
    
    <category term="Google" scheme="https://nijialin.com/tags/Google/"/>
    
    <category term="Cloud Run" scheme="https://nijialin.com/tags/Cloud-Run/"/>
    
  </entry>
  
  <entry>
    <title>【滑板】彩虹輪狀車練習場道路指引</title>
    <link href="https://nijialin.com/2023/10/26/skateboard-rainbow-park/"/>
    <id>https://nijialin.com/2023/10/26/skateboard-rainbow-park/</id>
    <published>2023-10-26T04:19:46.000Z</published>
    <updated>2023-10-26T04:19:46.086Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/2023/skateboard/S__15876103.jpg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由於最近迷上了衝浪滑板，但本身又是一個很喜歡挑戰許多不同的地方，但因為我在<strong>彩虹輪狀車練習場</strong>外面迷路了很久，以下分享一下道路指引 😆</p><p>地點：<a href="https://maps.app.goo.gl/U4GfNdgZdfG4HXrz6">https://maps.app.goo.gl/U4GfNdgZdfG4HXrz6</a></p><span id="more"></span><h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>這邊不是一個捷運會到的地方，如果從西湖捷運站過來的話，就需要搭 藍 7 or 藍 26 就可以到附近了；另外的選項也可以使用 GoShare or WeMoo 之類的共享機車即可前往。</p><p><img src="https://nijialin.com/images/2023/skateboard/S__15876101.jpg"></p><p>一般抵達的路徑應該會在<a href="https://maps.app.goo.gl/Vostsxjf578t9HNi9">內湖科工 D-總部大樓</a>附近找不到入口，他有一個地下道可以過馬路，位置請參考如上圖。</p><blockquote><p>我在這邊迷路了好久 XD</p></blockquote><p><img src="https://nijialin.com/images/2023/skateboard/S__15876104.jpg"></p><p>會到一個地下道，這裡進來通常都已經開始滑了</p><p><img src="https://nijialin.com/images/2023/skateboard/S__15876105.jpg"></p><p>出來之後還要爬一下河堤的樓梯，翻牆過去</p><p><img src="https://nijialin.com/images/2023/skateboard/S__15876106.jpg"></p><p>上來之後就會看到很空曠的河堤以及極限運動場，傍晚來真的很漂亮！</p><p><img src="https://nijialin.com/images/2023/skateboard/S__15876107.jpg"></p><p>這邊場地就有很多 pump 的地方，來玩的朋友一定要把護具都帶好再來，護腕、護肘、護膝、護墊都要帶好！我才看到有人裸裝直接摔，看了真的很痛 🥲</p><blockquote><p>之前因為挑戰 J 台而摔了一個大傷，大家來玩的時候要把一些基本的平衡都練好還是比較好喔</p></blockquote><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>以上分享<strong>彩虹輪狀車練習場</strong>的道路指引給大家，台北有很多很棒的滑板場，推薦大家都去挑戰看看！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2023/skateboard/S__15876103.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;由於最近迷上了衝浪滑板，但本身又是一個很喜歡挑戰許多不同的地方，但因為我在&lt;strong&gt;彩虹輪狀車練習場&lt;/strong&gt;外面迷路了很久，以下分享一下道路指引 😆&lt;/p&gt;
&lt;p&gt;地點：&lt;a href=&quot;https://maps.app.goo.gl/U4GfNdgZdfG4HXrz6&quot;&gt;https://maps.app.goo.gl/U4GfNdgZdfG4HXrz6&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="日記" scheme="https://nijialin.com/categories/%E6%97%A5%E8%A8%98/"/>
    
    
    <category term="Skateboard" scheme="https://nijialin.com/tags/Skateboard/"/>
    
    <category term="滑板" scheme="https://nijialin.com/tags/%E6%BB%91%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>就用 LINE Pay 在 Apple Watch 付款吧</title>
    <link href="https://nijialin.com/2023/10/19/line-pay-apple-watch/"/>
    <id>https://nijialin.com/2023/10/19/line-pay-apple-watch/</id>
    <published>2023-10-19T06:24:15.000Z</published>
    <updated>2023-10-19T06:24:15.875Z</updated>
    
    <content type="html"><![CDATA[<p>昨天看到同事用手錶付款想說是什麼功能，去問一下才發現我落後了!這篇文章來跟大家說明遺下我連結 LINE Pay APP 到 Apple Watch 的過程!</p><h1 id="Apple-Watch-安裝-LINE-Pay-APP"><a href="#Apple-Watch-安裝-LINE-Pay-APP" class="headerlink" title="Apple Watch 安裝 LINE Pay APP"></a>Apple Watch 安裝 LINE Pay APP</h1><p><img src="https://nijialin.com/images/2023/linepay/1.jpg"></p><p>首先到手機上搜尋 Watch，找到原生的程式</p><span id="more"></span><p><img src="https://nijialin.com/images/2023/linepay/2.jpg"></p><p>滑到最下面會看到可以安裝的 LINE Pay 選項</p><blockquote><p>APP store 的 LINE Pay APP 記得更新到最新才可以使用喔</p></blockquote><h1 id="換到-LINE-Pay-APP-上連接-Apple-Watch"><a href="#換到-LINE-Pay-APP-上連接-Apple-Watch" class="headerlink" title="換到 LINE Pay APP 上連接 Apple Watch"></a>換到 LINE Pay APP 上連接 Apple Watch</h1><p><img src="https://nijialin.com/images/2023/linepay/3.jpg"></p><p>接著點開 LINE Pay APP，點選最右下角的<strong>全部</strong>，並且滑到最下面按下<strong>設定</strong></p><p><img src="https://nijialin.com/images/2023/linepay/4.jpg"></p><p>接著找到<strong>智慧手錶</strong>的選項，給他大力地點下去</p><p><img src="https://nijialin.com/images/2023/linepay/5.jpg"></p><p>按下連動手錶的開關，這時候請把 Apple Watch 中的 LINE Pay 也一併打開，讓他們互相綁定喔!</p><p>理論上到這邊連接完之後就可以開始使用了</p><h1 id="手錶付款"><a href="#手錶付款" class="headerlink" title="手錶付款"></a>手錶付款</h1><p><img src="https://nijialin.com/images/2023/linepay/6.jpg"></p><p>我自己習慣把 LINE Pay APP 放在錶面當中，這樣我要結帳時就可以快速點一下開啟 Bar Code</p><p><img src="https://nijialin.com/images/2023/linepay/7.jpg"></p><p>輸入完密碼之後就會跳出你的 Bar Code，這時候把手伸過去給店員掃描即可!</p><blockquote><p>一般便利商店的 POS 機應該都滿穩定的，但如果去一些比較小型的店家，若手錶不夠亮可能也會導致掃不到喔</p></blockquote><p><img src="https://nijialin.com/images/2023/linepay/8.jpg"></p><p>付款完成啦! 大功告成</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;昨天看到同事用手錶付款想說是什麼功能，去問一下才發現我落後了!這篇文章來跟大家說明遺下我連結 LINE Pay APP 到 Apple Watch 的過程!&lt;/p&gt;
&lt;h1 id=&quot;Apple-Watch-安裝-LINE-Pay-APP&quot;&gt;&lt;a href=&quot;#Apple-Watch-安裝-LINE-Pay-APP&quot; class=&quot;headerlink&quot; title=&quot;Apple Watch 安裝 LINE Pay APP&quot;&gt;&lt;/a&gt;Apple Watch 安裝 LINE Pay APP&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2023/linepay/1.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;首先到手機上搜尋 Watch，找到原生的程式&lt;/p&gt;</summary>
    
    
    
    <category term="LINE" scheme="https://nijialin.com/categories/LINE/"/>
    
    
    <category term="LINE" scheme="https://nijialin.com/tags/LINE/"/>
    
    <category term="Apple" scheme="https://nijialin.com/tags/Apple/"/>
    
    <category term="Apple Watch" scheme="https://nijialin.com/tags/Apple-Watch/"/>
    
    <category term="LINE Pay" scheme="https://nijialin.com/tags/LINE-Pay/"/>
    
  </entry>
  
  <entry>
    <title>如何有效使用 Quote Message</title>
    <link href="https://nijialin.com/2023/10/07/line-bot-quote-message-reply-later/"/>
    <id>https://nijialin.com/2023/10/07/line-bot-quote-message-reply-later/</id>
    <published>2023-10-07T16:01:20.000Z</published>
    <updated>2023-10-07T16:01:50.489Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><img src="https://nijialin.com/images/2023/quote/1.png" alt="quote message"></p><p>近期 Messaging API 釋出了許久以前期待的 API - 回覆訊息(Quote Message)，讓 LINE Bot 回覆用戶時可以指定特定訊息(如上圖)，在生成式 AI 當下是個非常好用的一個功能(AI 需要運算時間)，接下來就快速跟大家介紹一下相關功能以及操作方式！</p><blockquote><p>新聞：<a href="https://developers.line.biz/en/news/2023/09/14/send-and-receive-quote-messages-using-the-messaging-api/">You can now send and receive quote messages using the Messaging API</a></p></blockquote><span id="more"></span><h1 id="Quote-Message-介紹"><a href="#Quote-Message-介紹" class="headerlink" title="Quote Message 介紹"></a>Quote Message 介紹</h1><p>操作時主要有三個元素需要注意：</p><ol><li><a href="https://developers.line.biz/en/news/2023/09/14/send-and-receive-quote-messages-using-the-messaging-api/#update-20230914-02">從 webhook 當中收到 Quote Message</a></li><li><a href="https://developers.line.biz/en/news/2023/09/14/send-and-receive-quote-messages-using-the-messaging-api/#update-20230914-03">取得 Quote Token</a></li><li><a href="https://developers.line.biz/en/news/2023/09/14/send-and-receive-quote-messages-using-the-messaging-api/#update-20230914-01">透過 Push Message 來發送 Quote</a></li></ol><p>透過上面三個步驟，就可以發送回復訊息啦！但大家操作起來會覺得為什麼不用 reply message 就好，平常回覆都很快啊？使用他有什麼優點嗎？</p><p>大家可以在這停一下思考個，平常在打字跟朋友聊天時也不一定每一則都會按下回覆。同理到了 LINE Bot，在跟用戶互動時，偶爾穿插個 Quote 也會讓用戶覺得這官方帳號非常用心，甚至可以搭配 <a href="https://developers.line.biz/en/docs/messaging-api/icon-nickname-switch/#specifying-icon-and-display-name">Icon Switch API</a> 也會別有一番風味喔</p><h2 id="Quote-message-範例"><a href="#Quote-message-範例" class="headerlink" title="Quote message 範例"></a><a href="https://github.com/louis70109/linebot-find-some/blob/main/main.py#L108">Quote message 範例</a></h2><p>Quote Message 是以 Push Message 的方式使用，可以從 Reply 的 webhook 當中收到 quote token(<a href="https://developers.line.biz/en/reference/messaging-api/#send-reply-message-response">開發文件</a>)，接著在 Push 時帶上 token，即可針對指定的訊息回覆：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> line_bot_api.push_message(push_message_request=PushMessageRequest(</span><br><span class="line">      to=event.source.user_id,</span><br><span class="line">      messages=[TextMessage(</span><br><span class="line">          text=tool_result,</span><br><span class="line">          quoteToken=event.message.quote_token)],</span><br><span class="line">  ))</span><br></pre></td></tr></table></figure><p><img src="https://nijialin.com/images/2023/quote/2.png" alt="quote message2"></p><blockquote><p>分享個使用案例：當大家串接生成式AI時，因為那邊運算普遍會比較慢些，因此可以把 AI 那邊的 code 另外處理，先透過 Reply Message 先請使用者稍等，後續在透過 Push Message 來回覆指定訊息，如此以來用戶在看訊息時就會比較清楚該訊息是回覆哪一則而不會錯亂～<br>參考程式碼: <a href="https://github.com/louis70109/linebot-find-some/blob/main/main.py#L99">GitHub URL</a></p></blockquote><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>一方面透過回覆訊息(Quote)可以讓用戶知道現在 LINE Bot 是針對哪個訊息作回覆；另一方面，也可以讓處理較慢的程式碼另外在 Queue 裡面操作，等到處理完成後在另外回覆，相關的操作皆是看大家在開發 LINE Bot 時的 user story，如果這篇文章有幫助到你，歡迎分享出去唷！感謝大家的觀看✍️</p><h1 id="活動小結"><a href="#活動小結" class="headerlink" title="活動小結"></a>活動小結</h1><p>立即加入「LINE 開發者官方社群」官方帳號，就能收到第一手 Meetup 活動，或與開發者計畫有關的最新消息的推播通知。▼</p><p>「LINE 開發者官方社群」官方帳號 ID：<a href="https://qr-official.line.me/gs/M_908lugfe_BW.png">@line_tw_dev</a></p><img src="https://qr-official.line.me/gs/M_908lugfe_BW.png" width="200" height="200"><h1 id="關於「LINE-開發社群計畫」"><a href="#關於「LINE-開發社群計畫」" class="headerlink" title="關於「LINE 開發社群計畫」"></a>關於「LINE 開發社群計畫」</h1><p>LINE 於 2019 年開始在台灣啟動「LINE 開發社群計畫」，將長期投入人力與資源在台灣舉辦對內對外、線上線下的開發者社群聚會、徵才日、開發者大會等，已經舉辦 30 場以上的活動。歡迎讀者們能夠持續回來查看最新的狀況。詳情請看:</p><ul><li><a href="https://engineering.linecorp.com/zh-hant/blog/2021-line-tw-devrel/">2021 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/2020-line-tw-devrel/">2020 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/line-taiwan-developer-relations-2019-plan/">2019 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/line-taiwan-developer-relations-2019/">LINE Taiwan Developer Relations 2019 回顧與 2019 開發社群計畫報告</a></li></ul><style>  section.compact {    font-size: 150%    }  img[alt~="center"] {    display: block;    margin: 0 auto;  }</style>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2023/quote/1.png&quot; alt=&quot;quote message&quot;&gt;&lt;/p&gt;
&lt;p&gt;近期 Messaging API 釋出了許久以前期待的 API - 回覆訊息(Quote Message)，讓 LINE Bot 回覆用戶時可以指定特定訊息(如上圖)，在生成式 AI 當下是個非常好用的一個功能(AI 需要運算時間)，接下來就快速跟大家介紹一下相關功能以及操作方式！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;新聞：&lt;a href=&quot;https://developers.line.biz/en/news/2023/09/14/send-and-receive-quote-messages-using-the-messaging-api/&quot;&gt;You can now send and receive quote messages using the Messaging API&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="LINE" scheme="https://nijialin.com/categories/LINE/"/>
    
    
    <category term="LINE Bot" scheme="https://nijialin.com/tags/LINE-Bot/"/>
    
    <category term="Quote Message" scheme="https://nijialin.com/tags/Quote-Message/"/>
    
    <category term="回覆訊息" scheme="https://nijialin.com/tags/%E5%9B%9E%E8%A6%86%E8%A8%8A%E6%81%AF/"/>
    
    <category term="Push Message" scheme="https://nijialin.com/tags/Push-Message/"/>
    
  </entry>
  
  <entry>
    <title>【GitHub】建立第一個 Issue Template</title>
    <link href="https://nijialin.com/2023/10/05/github-issue-report-yaml-template/"/>
    <id>https://nijialin.com/2023/10/05/github-issue-report-yaml-template/</id>
    <published>2023-10-05T06:44:28.000Z</published>
    <updated>2023-10-05T06:44:28.857Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/common.jpeg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>準備演講的同時，發現 GitHub 現在在回報 issue 上開始有框架的方式來讓專案開發者可以更快速建立，不用像以前要自己參考網路上的資料，或是自己天馬行空想一個版本。透過 yaml 的制定除了更好看以外，也讓用戶在回報 issue 時有更漂亮的畫面可以填寫，以下就分享一下如何在自己的 report 上加入～</p><span id="more"></span><h1 id="建立一個-Bug-Report-的-Issue-樣板"><a href="#建立一個-Bug-Report-的-Issue-樣板" class="headerlink" title="建立一個 Bug Report 的 Issue 樣板"></a>建立一個 <a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository#creating-issue-forms">Bug Report 的 Issue 樣板</a></h1><p>進入頁面之後，有提供一個如下的 bug report 樣板：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Bug</span> <span class="string">Report</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">File</span> <span class="string">a</span> <span class="string">bug</span> <span class="string">report</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&#x27;[Bug]: &#x27;</span></span><br><span class="line"><span class="attr">labels:</span> [<span class="string">&#x27;bug&#x27;</span>, <span class="string">&#x27;triage&#x27;</span>]</span><br><span class="line"><span class="attr">projects:</span> [<span class="string">&#x27;octo-org/1&#x27;</span>, <span class="string">&#x27;octo-org/44&#x27;</span>]</span><br><span class="line"><span class="attr">assignees:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">octocat</span></span><br><span class="line"><span class="attr">body:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">markdown</span></span><br><span class="line">    <span class="attr">attributes:</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">Thanks</span> <span class="string">for</span> <span class="string">taking</span> <span class="string">the</span> <span class="string">time</span> <span class="string">to</span> <span class="string">fill</span> <span class="string">out</span> <span class="string">this</span> <span class="string">bug</span> <span class="string">report!</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">input</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">contact</span></span><br><span class="line">    <span class="attr">attributes:</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">Contact</span> <span class="string">Details</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">How</span> <span class="string">can</span> <span class="string">we</span> <span class="string">get</span> <span class="string">in</span> <span class="string">touch</span> <span class="string">with</span> <span class="string">you</span> <span class="string">if</span> <span class="string">we</span> <span class="string">need</span> <span class="string">more</span> <span class="string">info?</span></span><br><span class="line">      <span class="attr">placeholder:</span> <span class="string">ex.</span> <span class="string">email@example.com</span></span><br><span class="line">    <span class="attr">validations:</span></span><br><span class="line">      <span class="attr">required:</span> <span class="literal">false</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">textarea</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">what-happened</span></span><br><span class="line">    <span class="attr">attributes:</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">What</span> <span class="string">happened?</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">Also</span> <span class="string">tell</span> <span class="string">us,</span> <span class="string">what</span> <span class="string">did</span> <span class="string">you</span> <span class="string">expect</span> <span class="string">to</span> <span class="string">happen?</span></span><br><span class="line">      <span class="attr">placeholder:</span> <span class="string">Tell</span> <span class="string">us</span> <span class="string">what</span> <span class="string">you</span> <span class="string">see!</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">&#x27;A bug happened!&#x27;</span></span><br><span class="line">    <span class="attr">validations:</span></span><br><span class="line">      <span class="attr">required:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">dropdown</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">version</span></span><br><span class="line">    <span class="attr">attributes:</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">Version</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">What</span> <span class="string">version</span> <span class="string">of</span> <span class="string">our</span> <span class="string">software</span> <span class="string">are</span> <span class="string">you</span> <span class="string">running?</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">1.0</span><span class="number">.2</span> <span class="string">(Default)</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">1.0</span><span class="number">.3</span> <span class="string">(Edge)</span></span><br><span class="line">      <span class="attr">default:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">validations:</span></span><br><span class="line">      <span class="attr">required:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">dropdown</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">browsers</span></span><br><span class="line">    <span class="attr">attributes:</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">What</span> <span class="string">browsers</span> <span class="string">are</span> <span class="string">you</span> <span class="string">seeing</span> <span class="string">the</span> <span class="string">problem</span> <span class="string">on?</span></span><br><span class="line">      <span class="attr">multiple:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Firefox</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Chrome</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Safari</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Microsoft</span> <span class="string">Edge</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">textarea</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">logs</span></span><br><span class="line">    <span class="attr">attributes:</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">Relevant</span> <span class="string">log</span> <span class="string">output</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">Please</span> <span class="string">copy</span> <span class="string">and</span> <span class="string">paste</span> <span class="string">any</span> <span class="string">relevant</span> <span class="string">log</span> <span class="string">output.</span> <span class="string">This</span> <span class="string">will</span> <span class="string">be</span> <span class="string">automatically</span> <span class="string">formatted</span> <span class="string">into</span> <span class="string">code,</span> <span class="string">so</span> <span class="literal">no</span> <span class="string">need</span> <span class="string">for</span> <span class="string">backticks.</span></span><br><span class="line">      <span class="attr">render:</span> <span class="string">shell</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">checkboxes</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">terms</span></span><br><span class="line">    <span class="attr">attributes:</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">Code</span> <span class="string">of</span> <span class="string">Conduct</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">By</span> <span class="string">submitting</span> <span class="string">this</span> <span class="string">issue,</span> <span class="string">you</span> <span class="string">agree</span> <span class="string">to</span> <span class="string">follow</span> <span class="string">our</span> [<span class="string">Code</span> <span class="string">of</span> <span class="string">Conduct</span>]<span class="string">(https://example.com)</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">label:</span> <span class="string">I</span> <span class="string">agree</span> <span class="string">to</span> <span class="string">follow</span> <span class="string">this</span> <span class="string">project&#x27;s</span> <span class="string">Code</span> <span class="string">of</span> <span class="string">Conduct</span></span><br><span class="line">          <span class="attr">required:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://nijialin.com/images/2023/github-report/1.png"></p><p>接著找到你想要使用的 project，按下 <code>Add file</code> 新增檔案</p><p><img src="https://nijialin.com/images/2023/github-report/2.png"></p><p>在輸入框上面打上 <code>.github/ISSUE_TEMPLATE/bug-report.yaml</code> ，輸入到<strong>斜線</strong><code>/</code>時會在畫面上自動跑階層出來，因此不用太擔心會不會被失敗，然後把剛剛的 yaml code 貼上去 commit 它！</p><p><img src="https://nijialin.com/images/2023/github-report/3.png"></p><p>Commit 完成之後可以現看一下被 GitHub 渲染出來的樣子有沒有符合心中的樣式</p><p><img src="https://nijialin.com/images/2023/github-report/4.png"></p><p>送自己個 issue！成功之後應該要如同上面的畫面，會有一個新的樣板跑出來</p><p><img src="https://nijialin.com/images/2023/github-report/5.png"></p><p>畢竟是 bug report，該有的 prefix 以及 label 都會出現，下拉式選單有都可以使用，甚至編輯器也都是 Markdown 格式，如此以來 GitHub 專案又更完整了一些！</p><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>快速筆記一下自己在做 issue template 這邊的發現，如果大家有發現更有趣的內容，歡迎下方留言讓我知道！想參考的 <a href="https://github.com/louis70109/youtube-search-langchain">repo 可以看這邊</a>，那我們就下次見囉！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/common.jpeg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;準備演講的同時，發現 GitHub 現在在回報 issue 上開始有框架的方式來讓專案開發者可以更快速建立，不用像以前要自己參考網路上的資料，或是自己天馬行空想一個版本。透過 yaml 的制定除了更好看以外，也讓用戶在回報 issue 時有更漂亮的畫面可以填寫，以下就分享一下如何在自己的 report 上加入～&lt;/p&gt;</summary>
    
    
    
    <category term="學習紀錄" scheme="https://nijialin.com/categories/%E5%AD%B8%E7%BF%92%E7%B4%80%E9%8C%84/"/>
    
    
    <category term="GitHub" scheme="https://nijialin.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>【入坑記】衝浪滑板</title>
    <link href="https://nijialin.com/2023/10/01/surfing-skateboard-rookie/"/>
    <id>https://nijialin.com/2023/10/01/surfing-skateboard-rookie/</id>
    <published>2023-10-01T05:04:58.000Z</published>
    <updated>2023-10-01T11:44:53.269Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/louis70109/ideas-tree/master/images/475307204158423368.png" alt="surfing skateboard"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由於年初時到日本滑雪因而接觸板類運動，雖然挫折感很高(又一直摔)，但能夠滑行真的是成就感滿點！而在過程中去小叮噹兩趟延續滑雪的腳感，不過一直處於要抽空找團才能去滑，地點在新竹成本又很高 🥲，在同事 Daniel 的推坑下(<a href="https://medium.com/%E8%A1%9D%E6%B5%AA%E6%BB%91%E6%9D%BF%E4%BA%8C%E4%B8%89%E4%BA%8B">系列文章</a>)，為了培養年底滑雪的一些腳感，跳坑衝浪滑板讓我在日常也可以抽空出來玩玩！</p><span id="more"></span><h1 id="想那麼多幹嘛？買"><a href="#想那麼多幹嘛？買" class="headerlink" title="想那麼多幹嘛？買"></a>想那麼多幹嘛？買</h1><p><img src="https://raw.githubusercontent.com/louis70109/ideas-tree/master/images/475303260036006002.png"></p><blockquote><p>剛買它的第一天 2023&#x2F;9&#x2F;28</p></blockquote><p>我是在內湖的 ALL RIDE 購買 <a href="https://www.allride.com.tw/product/detail/15354">Hydroponic Fish 31.5” x 9.75” 衝浪滑板</a>，我的板子本身是 32” 的，店員提到差 0.5”是沒啥差的，主要還是在輪子跟靈敏度需要什麼，在考量上我可能會在河濱公園玩滑板(有柏油的地方)，因此推薦起來我還是選擇靈敏度低些，有些時候需要自主加速的衝浪板。</p><p>剛來到店裡時店員臉真的很跩很有距離感 😆，但其實聊起來只是非常的做自己而已，只要稍微知道自己想購買的方向，但有許多不清楚的地方，都可以請他跟你解釋，當店員講完時就會發現自己想要的是什麼，幫助你選擇可以更快喔！但因為我一開始就打算買最便宜的(NTD 6,800)，因此我就以這款為主跟他討論～</p><blockquote><p>至於為什麼滑板店員臉都很跩，可以看看下面的影片 XD</p></blockquote><iframe width="560" height="315" src="https://www.youtube.com/embed/vr_jyGYcqS8?si=6orijF-txomUW5OR" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h1 id="護具：降低受傷的風險"><a href="#護具：降低受傷的風險" class="headerlink" title="護具：降低受傷的風險"></a>護具：降低受傷的風險</h1><p><img src="https://raw.githubusercontent.com/louis70109/ideas-tree/master/images/475303237705793734.png" alt="迪卡儂"></p><p>護具我本來想皮不想戴，但想想如果都只基本滑行好像滿弱的？因此這邊跟大家了起來覺得可以先買個基本的全套 <strong>(手掌、護肘、護膝)</strong> ，至少要先保護好關節，誰知道初學一次的噴飛摔下去受傷會噴多少錢修復呢？因此我就先買個基本的保護著。</p><blockquote><p>護具在我玩的第三天就發會功用，我在學著 kick turn 時滑掉，在我下去時就剛好磨到手掌的地方，真的是好險有帶著，只是屁股剛好沒有防摔褲，寫文章✍️的當下，半邊水蜜桃還是受傷的狀態🥲</p></blockquote><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p><img src="https://raw.githubusercontent.com/louis70109/ideas-tree/master/images/475303716225548738.png"></p><p>雖然入坑真的是不便宜，荷包君再次哭泣，不過整體的體驗算是滿讚的，尤其練習平衡感以及各種轉彎真的是耗盡本肥宅的洪荒之力，每次出去玩都大噴汗，希望可以讓我稍微地瘦身一些些😆，更多內容就先讓我把水蜜桃的摔傷養好，後續再來繼續分享心得！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/louis70109/ideas-tree/master/images/475307204158423368.png&quot; alt=&quot;surfing skateboard&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;由於年初時到日本滑雪因而接觸板類運動，雖然挫折感很高(又一直摔)，但能夠滑行真的是成就感滿點！而在過程中去小叮噹兩趟延續滑雪的腳感，不過一直處於要抽空找團才能去滑，地點在新竹成本又很高 🥲，在同事 Daniel 的推坑下(&lt;a href=&quot;https://medium.com/%E8%A1%9D%E6%B5%AA%E6%BB%91%E6%9D%BF%E4%BA%8C%E4%B8%89%E4%BA%8B&quot;&gt;系列文章&lt;/a&gt;)，為了培養年底滑雪的一些腳感，跳坑衝浪滑板讓我在日常也可以抽空出來玩玩！&lt;/p&gt;</summary>
    
    
    
    <category term="日記" scheme="https://nijialin.com/categories/%E6%97%A5%E8%A8%98/"/>
    
    
    <category term="Skateboard" scheme="https://nijialin.com/tags/Skateboard/"/>
    
    <category term="Surfing" scheme="https://nijialin.com/tags/Surfing/"/>
    
    <category term="路滑" scheme="https://nijialin.com/tags/%E8%B7%AF%E6%BB%91/"/>
    
    <category term="運動" scheme="https://nijialin.com/tags/%E9%81%8B%E5%8B%95/"/>
    
  </entry>
  
  <entry>
    <title>新米到上手 LangChain: 藉由 Function Agent 在 LINE Bot 上處理 Calendar 資訊！</title>
    <link href="https://nijialin.com/2023/08/18/first-time-langchain-line-bot/"/>
    <id>https://nijialin.com/2023/08/18/first-time-langchain-line-bot/</id>
    <published>2023-08-18T04:23:46.000Z</published>
    <updated>2023-08-27T16:20:30.035Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/common.jpeg"></p><ul><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#%E4%BB%8B%E7%B4%B9">介紹</a><ul><li><a href="#%E7%82%BA%E4%BB%80%E9%BA%BC%E9%81%B8%E6%93%87-google-calender">為什麼選擇 Google Calender?</a><ul><li><a href="#%E5%96%9C%E6%AD%A1%E7%A8%8B%E5%BC%8F%E7%A2%BC%E5%8F%AF%E4%BB%A5%E7%9C%8B%E9%80%99%E9%82%8A">喜歡程式碼可以看這邊</a></li></ul></li><li><a href="#%E9%81%8E%E5%8E%BB%E6%88%91%E6%80%8E%E9%BA%BC%E4%B8%8B-prompt">過去我怎麼下 prompt？</a></li><li><a href="#%E4%BB%80%E9%BA%BC%E6%98%AF-langchain">什麼是 LangChain？</a></li><li><a href="#langchain-function-agent-%E5%B8%B6%E4%BE%86%E4%BA%86%E4%BB%80%E9%BA%BC%E5%A5%BD%E8%99%95">LangChain Function Agent 帶來了什麼好處？</a></li><li><a href="#%E7%82%BA%E4%BB%80%E9%BA%BC%E8%A6%81%E5%9C%A8-line-bot-%E7%94%A8">為什麼要在 LINE Bot 用？</a></li><li><a href="#%E6%9B%B4%E6%96%B0%E4%BD%BF%E7%94%A8-youtube-%E4%BB%A5%E5%8F%8A-wikipedia-tool">更新：使用 Youtube 以及 wikipedia Tool</a></li></ul></li><li><a href="#%E7%B5%90%E8%AB%96">結論</a></li><li><a href="#%E6%B4%BB%E5%8B%95%E5%B0%8F%E7%B5%90">活動小結</a></li><li><a href="#%E9%97%9C%E6%96%BCline-%E9%96%8B%E7%99%BC%E7%A4%BE%E7%BE%A4%E8%A8%88%E7%95%AB">關於「LINE 開發社群計畫」</a></li></ul><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>平時我們經常需要管理&#x2F;安排行程和資訊。這篇文章將介紹我是如何透過 Google Calendar 與 LangChain，讓我更快在 LINE Bot 上可以加入個人行事曆。同時，我也將分享有關使用 Google Calendar 的好處，以及如何更有效地利用 LangChain Function Agent 來簡化程式碼開發過程。相信這對於建立 LINE Bot 以及各種相關應用的開發者來說會是一個不錯的範例，讓我們就往下看下去吧！</p><p>Slide: <a href="https://speakerdeck.com/line_developers_tw/first-time-lanchain-line-bot">https://speakerdeck.com/line_developers_tw/first-time-lanchain-line-bot</a><br>範例程式碼：<a href="https://github.com/louis70109/BookingStep">https://github.com/louis70109/BookingStep</a><br>歡迎試玩 LINE Bot：<a href="https://lin.ee/92O5Od8">https://lin.ee/92O5Od8</a></p><span id="more"></span><h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><h2 id="為什麼選擇-Google-Calender"><a href="#為什麼選擇-Google-Calender" class="headerlink" title="為什麼選擇 Google Calender?"></a>為什麼選擇 Google Calender?</h2><p>我一直在使用 Google 日曆，主要是基於以下原因：</p><ul><li>在 Cambly 上課時，我可以將課程資訊直接綁定到 Google Calender，方便我管理下班後的時間</li><li>Apple Calender 可以收來自 Google Calender 的事件，這對於熱愛使用蘋果產品的我來說非常便利，可以在手機、電腦和平板上同步查看我的行事曆 (只需要一個 iCloud)</li><li>Google 日曆的同步速度很快，幾乎可以立即反應行事曆狀態，讓我在規劃時間方面更加順暢<ul><li>同步很快，體感約&lt;60s</li></ul></li></ul><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/b3671167886945a3b1231f981d95a172?slide=7" title="新米到上手 LangChain: 別再更新了，快學不動了" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><ul><li>標題、時間：對於我來說是必須的，個人行事曆不用像公司的這麼完整，我只要知道時間跟要做什麼事情就好</li><li>地點、描述：話雖如此，如果行事曆裡面能有更完整的內容當然更好，但沒有也沒關係，只要能幫助我回想就可以了，因此這兩個對我來說是選田</li></ul><h3 id="喜歡程式碼可以看這邊"><a href="#喜歡程式碼可以看這邊" class="headerlink" title="喜歡程式碼可以看這邊"></a>喜歡程式碼可以看這邊</h3><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/b3671167886945a3b1231f981d95a172?slide=8" title="新米到上手 LangChain: 別再更新了，快學不動了" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>以 python 來說，因為是打 GET，不一定每個瀏覽器都會幫忙處理 unicode 的問題，為保險起見都需要先用 <code>urllib.parse.quote(&quot;STRING&quot;)</code> 來包，<code>openExternalBrowser</code> 後面在說～</p><h2 id="過去我怎麼下-prompt？"><a href="#過去我怎麼下-prompt？" class="headerlink" title="過去我怎麼下 prompt？"></a>過去我怎麼下 prompt？</h2><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/b3671167886945a3b1231f981d95a172?slide=10" title="新米到上手 LangChain: 別再更新了，快學不動了" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>在公司內部的工作坊中，學到了上圖的 prompt 可以告訴 AI 如何幫我產生我對應要的東西，從角色到要作的事情說清楚，但在這裡有沒有發現，我下面寫的一些髒 code，都要確保它(AI)若沒給東西時我應該怎麼處理，甚至還因為他只能給字串版本的 dict，要暴力破解把他轉成 dict，實在是不太好的作法…哈哈</p><h2 id="什麼是-LangChain？"><a href="#什麼是-LangChain？" class="headerlink" title="什麼是 LangChain？"></a>什麼是 LangChain？</h2><p>引用至 Evan 寫的文章 - <a href="https://engineering.linecorp.com/zh-hant/blog/cloud-summit-2023-gal-linebot">Cloud Summit 2023 - 結合生成式 AI 打造有趣的 LINE Bot 應用</a></p><p>要讓你的 LINE Bot 做出以上的事情，你需要很多很多的相關 Prompt 。不論是定義 LLM 的模型該如何解讀你的文字，該如何挑選即將要執行的動作，或是如何將結果作為有效的拆解，到把以往訊息得內容加以存在 Prompt 之中。</p><p>但是透過 LangChain 你可以將這些工作拆解成一個個的小方塊，讓你打造相關服務與應用的時候不用在重複使用那些的 Prompt ，就可以快速打造出來。 以下透過一些簡單的程式碼範例來講解使用了 LangChain 之後，你的程式碼會變得多簡潔。</p><h2 id="LangChain-Function-Agent-帶來了什麼好處？"><a href="#LangChain-Function-Agent-帶來了什麼好處？" class="headerlink" title="LangChain Function Agent 帶來了什麼好處？"></a>LangChain Function Agent 帶來了什麼好處？</h2><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/b3671167886945a3b1231f981d95a172?slide=11" title="新米到上手 LangChain: 別再更新了，快學不動了" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>如果有在 Python 作過型別定義，一定對於 Pydantic 不陌生，因為 LangChain 有引入它方式，幫助 LLM 定義需求時可以下相關訊息(description)，透過定義完成後，在 <code>def _run()</code> 裡面 LLM 會幫你把參數放入對應的欄位，並且讓開發者可以快速拿參數做事情。</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/b3671167886945a3b1231f981d95a172?slide=12" title="新米到上手 LangChain: 別再更新了，快學不動了" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>而更神奇的是，你可以在 description 裡面多寫一些內容，像是把 <code>台</code> &lt;-&gt; <code>臺</code>之類的幫你對應好，這樣是不是想到能解決了超多事情呢？</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/b3671167886945a3b1231f981d95a172?slide=13" title="新米到上手 LangChain: 別再更新了，快學不動了" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>用 Function Agent 的好處是，Web 開發者可以把<code>生成式</code>這件事，用 web server 的邏輯開發，以上述為例：定義環境變數-前處理-init-Run server，霎那間還真的以為自己在寫 web service？如此一來就可以更直覺得去寫你想要的 AI 解決方案，前處理想要放更多資訊，只要定義好 class，基本上很多事情都很好解決了！</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/b3671167886945a3b1231f981d95a172?slide=19" title="新米到上手 LangChain: 別再更新了，快學不動了" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>透過 LangChain，我可以少學&#x2F;寫很多的黑魔法，甚至在 description 中就可以判斷今天、明天、兩天後…等等的只有人類對話能懂的東西，雖然還不太懂 LangChain 後面怎麼作，但如此一來我也省處理了很多把 prompt 一直串起來的功了。</p><h2 id="為什麼要在-LINE-Bot-用？"><a href="#為什麼要在-LINE-Bot-用？" class="headerlink" title="為什麼要在 LINE Bot 用？"></a>為什麼要在 LINE Bot 用？</h2><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/b3671167886945a3b1231f981d95a172?slide=19" title="新米到上手 LangChain: 別再更新了，快學不動了" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>一直沒說為什麼要在 LINE Bot 裡面使用，主要是我個人日常就會準備一隻 Bot 來存我臨時的訊息，抑或是在群組時常常都會有很片段的消息來約時間，通常最後都會有感覺某個時間要出門，結果往往時間到就忘了也找不到訊息在哪…</p><p>考慮使用的原因是，因為 LINE Bot 是 event-driven 的方式，我會在桌機板的 LINE 把群組訊息複製起來貼到 LINE Bot，訊息樣是會很像以下：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">01</span>:<span class="number">52</span> 🤖測試用🐤 你明天想去吃範嗎？</span><br><span class="line"><span class="attribute">01</span>:<span class="number">52</span> 🤖測試用🐤 可能在內湖附近</span><br><span class="line"><span class="attribute">01</span>:<span class="number">53</span> 🥷NiJia   可啊，但幾點？</span><br><span class="line"><span class="attribute">01</span>:<span class="number">53</span> 🤖測試用🐤 應該七點下班後吧</span><br><span class="line"><span class="attribute">01</span>:<span class="number">53</span> 🤖測試用🐤 你看你要不要來在說</span><br><span class="line"><span class="attribute">01</span>:<span class="number">54</span> 🥷NiJia   喔好</span><br></pre></td></tr></table></figure><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/b3671167886945a3b1231f981d95a172?slide=17" title="新米到上手 LangChain: 別再更新了，快學不動了" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>如此一來就能達到類似上述的功能，讓 LangChain 幫忙整理訊息並放到對應 Google Calendar 的 query parameter，這樣就能加到個人行事曆中了！</p><h2 id="更新：使用-Youtube-以及-wikipedia-Tool"><a href="#更新：使用-Youtube-以及-wikipedia-Tool" class="headerlink" title="更新：使用 Youtube 以及 wikipedia Tool"></a>更新：使用 Youtube 以及 wikipedia Tool</h2><p>看 LangChain 文件時發現它其實有<a href="https://python.langchain.com/docs/integrations/tools/">許多 Tool Plugin</a>，支援了各式各樣的服務，依照我這個行事曆機器人，我選擇支援了 <a href="https://python.langchain.com/docs/integrations/tools/youtube">Youtube</a> &amp; <a href="https://python.langchain.com/docs/integrations/tools/wikipedia">Wikipedia</a>，只要把相依套件安裝完，基本上就可以引入使用，大概如下：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> youtube_search</span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> langchain.tools <span class="keyword">import</span> YouTubeSearchTool</span><br></pre></td></tr></table></figure><p>YouTubeSearchTool API Reference:</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">tool</span> = <span class="function"><span class="title">YouTubeSearchTool</span>()</span></span><br><span class="line"></span><br><span class="line"><span class="variable">tool.run</span>(<span class="string">&quot;lex friedman&quot;</span>)</span><br></pre></td></tr></table></figure><p>結果：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;<span class="selector-attr">[<span class="string">&#x27;/watch?v=VcVfceTsD0A&amp;pp=ygUMbGV4IGZyaWVkbWFu&#x27;</span>, <span class="string">&#x27;/watch?v=gPfriiHBBek&amp;pp=ygUMbGV4IGZyaWVkbWFu&#x27;</span>]</span>&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>官方文件中其實有很多大密寶，我也透過這樣挖了好多東西～哈哈哈</p></blockquote><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>這次的分享先來了解一下 LangChain Function Agent 帶來的魔力！讓我少研究很多 OpenAI 黑魔法的時間，甚至很多程式碼寫起來跟平常寫法都很像，在大 AI 時代對於日常用 Python 寫應用的工程師是非常友善的！如果你也正在關注相關應用，或許可以參考本篇文章唷！</p><h1 id="活動小結"><a href="#活動小結" class="headerlink" title="活動小結"></a>活動小結</h1><p>立即加入「LINE 開發者官方社群」官方帳號，就能收到第一手 Meetup 活動，或與開發者計畫有關的最新消息的推播通知。▼</p><p>「LINE 開發者官方社群」官方帳號 ID：<a href="https://qr-official.line.me/gs/M_908lugfe_BW.png">@line_tw_dev</a></p><img src="https://qr-official.line.me/gs/M_908lugfe_BW.png" width="200" height="200"><h1 id="關於「LINE-開發社群計畫」"><a href="#關於「LINE-開發社群計畫」" class="headerlink" title="關於「LINE 開發社群計畫」"></a>關於「LINE 開發社群計畫」</h1><p>LINE 於 2019 年開始在台灣啟動「LINE 開發社群計畫」，將長期投入人力與資源在台灣舉辦對內對外、線上線下的開發者社群聚會、徵才日、開發者大會等，已經舉辦 30 場以上的活動。歡迎讀者們能夠持續回來查看最新的狀況。詳情請看:</p><ul><li><a href="https://engineering.linecorp.com/zh-hant/blog/2021-line-tw-devrel/">2021 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/2020-line-tw-devrel/">2020 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/line-taiwan-developer-relations-2019-plan/">2019 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/line-taiwan-developer-relations-2019/">LINE Taiwan Developer Relations 2019 回顧與 2019 開發社群計畫報告</a></li></ul><style>  section.compact {    font-size: 150%    }  img[alt~="center"] {    display: block;    margin: 0 auto;  }</style>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/common.jpeg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%89%8D%E8%A8%80&quot;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BB%8B%E7%B4%B9&quot;&gt;介紹&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%82%BA%E4%BB%80%E9%BA%BC%E9%81%B8%E6%93%87-google-calender&quot;&gt;為什麼選擇 Google Calender?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E5%96%9C%E6%AD%A1%E7%A8%8B%E5%BC%8F%E7%A2%BC%E5%8F%AF%E4%BB%A5%E7%9C%8B%E9%80%99%E9%82%8A&quot;&gt;喜歡程式碼可以看這邊&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E9%81%8E%E5%8E%BB%E6%88%91%E6%80%8E%E9%BA%BC%E4%B8%8B-prompt&quot;&gt;過去我怎麼下 prompt？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E4%BB%80%E9%BA%BC%E6%98%AF-langchain&quot;&gt;什麼是 LangChain？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#langchain-function-agent-%E5%B8%B6%E4%BE%86%E4%BA%86%E4%BB%80%E9%BA%BC%E5%A5%BD%E8%99%95&quot;&gt;LangChain Function Agent 帶來了什麼好處？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%82%BA%E4%BB%80%E9%BA%BC%E8%A6%81%E5%9C%A8-line-bot-%E7%94%A8&quot;&gt;為什麼要在 LINE Bot 用？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%9B%B4%E6%96%B0%E4%BD%BF%E7%94%A8-youtube-%E4%BB%A5%E5%8F%8A-wikipedia-tool&quot;&gt;更新：使用 Youtube 以及 wikipedia Tool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E7%B5%90%E8%AB%96&quot;&gt;結論&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%B4%BB%E5%8B%95%E5%B0%8F%E7%B5%90&quot;&gt;活動小結&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E9%97%9C%E6%96%BCline-%E9%96%8B%E7%99%BC%E7%A4%BE%E7%BE%A4%E8%A8%88%E7%95%AB&quot;&gt;關於「LINE 開發社群計畫」&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;平時我們經常需要管理&amp;#x2F;安排行程和資訊。這篇文章將介紹我是如何透過 Google Calendar 與 LangChain，讓我更快在 LINE Bot 上可以加入個人行事曆。同時，我也將分享有關使用 Google Calendar 的好處，以及如何更有效地利用 LangChain Function Agent 來簡化程式碼開發過程。相信這對於建立 LINE Bot 以及各種相關應用的開發者來說會是一個不錯的範例，讓我們就往下看下去吧！&lt;/p&gt;
&lt;p&gt;Slide: &lt;a href=&quot;https://speakerdeck.com/line_developers_tw/first-time-lanchain-line-bot&quot;&gt;https://speakerdeck.com/line_developers_tw/first-time-lanchain-line-bot&lt;/a&gt;&lt;br&gt;範例程式碼：&lt;a href=&quot;https://github.com/louis70109/BookingStep&quot;&gt;https://github.com/louis70109/BookingStep&lt;/a&gt;&lt;br&gt;歡迎試玩 LINE Bot：&lt;a href=&quot;https://lin.ee/92O5Od8&quot;&gt;https://lin.ee/92O5Od8&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="LINE" scheme="https://nijialin.com/categories/LINE/"/>
    
    
    <category term="LINE" scheme="https://nijialin.com/tags/LINE/"/>
    
    <category term="ChatGPT" scheme="https://nijialin.com/tags/ChatGPT/"/>
    
    <category term="OpenAI" scheme="https://nijialin.com/tags/OpenAI/"/>
    
    <category term="LangChain" scheme="https://nijialin.com/tags/LangChain/"/>
    
    <category term="Google Calendar" scheme="https://nijialin.com/tags/Google-Calendar/"/>
    
    <category term="Function Agent" scheme="https://nijialin.com/tags/Function-Agent/"/>
    
  </entry>
  
  <entry>
    <title>【快打6】新玩法與硬體選擇</title>
    <link href="https://nijialin.com/2023/08/06/why-buy-street-fighter-6/"/>
    <id>https://nijialin.com/2023/08/06/why-buy-street-fighter-6/</id>
    <published>2023-08-06T12:23:22.000Z</published>
    <updated>2023-08-08T07:54:32.189Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="#1-%E5%89%8D%E8%A8%80">1. 前言</a></li><li><a href="#2-%E4%BB%8B%E7%B4%B9">2. 介紹</a><ul><li><a href="#21-%E7%82%BA%E4%BB%80%E9%BA%BC%E8%A6%81%E8%B2%B7">2.1. 為什麼要買？</a></li><li><a href="#22-%E7%8F%BE%E4%BB%A3%E6%A8%A1%E5%BC%8F%E5%A5%BD%E9%A6%99%E5%95%8A%E4%B8%8D%E7%94%A8%E8%87%AA%E5%B7%B1%E5%B0%BB%E6%8C%89%E9%8D%B5">2.2. 現代模式好香啊！不用自己尻按鍵</a></li><li><a href="#23-%E4%B8%80%E5%AE%9A%E8%A6%81%E5%A4%A7%E6%90%96%E5%97%8E%E6%90%96%E6%A1%BF--%E8%A1%8C%E4%B8%8D%E8%A1%8C">2.3. 一定要大搖嗎？搖桿 🎮 行不行？</a></li><li><a href="#24-%E6%A0%BC%E9%AC%A5%E9%81%8A%E6%88%B2--%E5%B8%B6%E4%BE%86%E7%9A%84%E6%8C%AB%E6%8A%98%E6%84%9F">2.4. 格鬥遊戲 🥊 帶來的挫折感</a></li><li><a href="#25-%E5%BE%9E-100-%E5%88%B0-115-">2.5. 從 10:0 到 11:5 🥈</a></li><li><a href="#26-%E5%85%B6%E4%BB%96">2.6. 其他</a></li></ul></li><li><a href="#3-%E7%B5%90%E8%AB%96">3. 結論</a></li></ul><h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h1><p>暨上篇分享的<a href="https://nijialin.com/2023/07/29/why-i-buy-rog-ally/">關於我衝動買了 ROG Ally 的夜晚 ⋯</a>，分享買它的過程與設備狀態，其中買它最主要就是要打 LOL 跟<a href="https://www.streetfighter.com/6/zh-hant">快打旋風 6</a> (今天的主角)，雖然因為硬體需求畫質不能開到頂，但可以隨身攜帶並且不佔空間就深得我心了 ✨，因此今天就來分享玩快打 6 的一些心得 👀</p><span id="more"></span><h1 id="2-介紹"><a href="#2-介紹" class="headerlink" title="2. 介紹"></a>2. 介紹</h1><h2 id="2-1-為什麼要買？"><a href="#2-1-為什麼要買？" class="headerlink" title="2.1. 為什麼要買？"></a>2.1. 為什麼要買？</h2><p>快打旋風在我很還很小的時候就有機台可以打，以當時的價格一場🎮 10 元，贏的繼續輸的就要在投幣，看輸幾場就是 10 上去，假設我玩一百場輸了 40 場，那我就是等於花 400 玩遊戲 💸💸💸。</p><p>而按照 <a href="https://store.steampowered.com/app/1364780/Street_Fighter_6/">Steam 價 - 1680 元</a>，等於輸 120 場就回本了 (?)，發現自己進入遊戲還是手殘，這樣想就不虧了。</p><blockquote><p>好像不是這樣說捏？？？輸愈多越賺 😆😆😆</p></blockquote><h2 id="2-2-現代模式好香啊！不用自己尻按鍵"><a href="#2-2-現代模式好香啊！不用自己尻按鍵" class="headerlink" title="2.2. 現代模式好香啊！不用自己尻按鍵"></a>2.2. 現代模式好香啊！不用自己尻按鍵</h2><p><img src="https://nijialin.com/images/2023/sf6/1.png"></p><p>剛開始完並看到上面按鍵時，光要把連段學完大概一兩個禮拜去了，而通常這也會最挫折的地方。在六代裡面，出了一個<strong>現代模式</strong>，讓遊玩的玩家可以透過組合鍵連段，也可以一鍵必殺技，非常大幅度的降低新米們加入這遊戲後的挫折感，初期可以先透過這模式學會格鬥遊戲判斷時機，未來不論要轉<strong>經典模式</strong>或維持，這模式都是快打 6 出的一個超棒的功能！</p><blockquote><p>這裡有<a href="https://forum.gamer.com.tw/C.php?bsn=173&snA=14847">巴哈的大大寫的文章</a>，我就分享使用心得</p></blockquote><h2 id="2-3-一定要大搖嗎？搖桿-🎮-行不行？"><a href="#2-3-一定要大搖嗎？搖桿-🎮-行不行？" class="headerlink" title="2.3. 一定要大搖嗎？搖桿 🎮 行不行？"></a>2.3. 一定要大搖嗎？搖桿 🎮 行不行？</h2><p><img src="https://github.com/louis70109/ideas-tree/raw/master/images/466056084298924484.png"></p><p>由於我是買 ROG Ally💻，某些時間上我可能也是操作搖桿 🎮，而我本身也是有買一個上章節的搖桿，就個人體驗上，過去玩了許多 PS &amp; Switch 遊戲，很習慣使用搖桿遊玩各種遊戲，在適應上會快上很多；另一方面，畢竟一般搖桿對於玩家來說，基本上有玩主機遊戲都會人手一隻，對於玩家加入門檻也相對較低，不用另外在買一個只給快打旋風，萬一退坑不玩格鬥遊戲，那豈不是浪費了呢？</p><blockquote><p>甚至看到這幾天的 EVO 2023 大賽上也很多高手都用搖桿玩</p></blockquote><p>但我個人對於街機還是有信仰的，覺得格鬥遊戲就是要有一個大搖才對(<strong>小朋友別學</strong>)，但我還是先以便宜的入手，若自己真的想繼續玩快打 6，在考慮入手高階的大搖！</p><h2 id="2-4-格鬥遊戲-🥊-帶來的挫折感"><a href="#2-4-格鬥遊戲-🥊-帶來的挫折感" class="headerlink" title="2.4. 格鬥遊戲 🥊 帶來的挫折感"></a>2.4. 格鬥遊戲 🥊 帶來的挫折感</h2><blockquote><p>這裡內容是從 youtube 頻道上聽到的，分享給大家</p></blockquote><p>一般我們在玩各種對戰遊戲，如 LOL, PUBG, 爐石…etc，因為這些遊戲大部分都有防碎玻璃機制，怎麼說呢，就是你可以怪打野不會幫、跳傘下面都沒東西、運氣不好手牌差，諸如許多案例都是可以幫助玩家分攤挫折感。</p><p>而在快打旋風之類的格鬥遊戲，被電就是被電，三不五時就被一套接到死，沒反應時間，幾十秒就被 KO，如此的遊戲真的需要有愛以前一定的耐心才行，不然這遊戲錢真的會丟水溝 💦。但快打 6 已經出了現代模式，幫助大家度過接技苦手的階段，也推薦大家來玩玩看！</p><blockquote><p>我用現代模式從鐵牌爬到銀牌，具影片說法我應該已經贏過 35%玩家左右的玩家了！</p></blockquote><h2 id="2-5-從-10-0-到-11-5-🥈"><a href="#2-5-從-10-0-到-11-5-🥈" class="headerlink" title="2.5. 從 10:0 到 11:5 🥈"></a>2.5. 從 10:0 到 11:5 🥈</h2><p><img src="https://github.com/louis70109/ideas-tree/raw/master/images/466911630275117300.png"></p><p>這代很棒的是有<strong>街機模式</strong>，對於喜歡挑戰但牌位一直上不去的人很有幫助，一場牌位賽最多三場結束，很常還沒習慣角色或是出招方式，就輸的很莫名其妙。</p><p>透過街機模式，可以隨機找路人對戰，只要對方願意跟你打，就可以一直打下去，好處就是一開始很不習慣對方節奏，隨著被打久了，也知道跳就會被升龍拳，那就學到一課了唄！進而開始有機會贏下一個燈 💡💡</p><p>而我也是透過街機模式 🥊，從 10:0 開始習慣對方節奏後，開始連凹五場回來，打到對手都開始不讓，願意繼續跟我打下去了呢！(成就感滿點)</p><blockquote><p>個人推薦 CPU 💻 打到等級 7 會贏就可以去街機跟人家玩，會進步非常快喔！</p></blockquote><h2 id="2-6-其他"><a href="#2-6-其他" class="headerlink" title="2.6. 其他"></a>2.6. 其他</h2><ul><li>大概 140 元台幣可以買到五個 SKIN(顏色、套裝)</li><li>體驗版約 16G，正式版約 50G，可以先抓來試玩看看在決定要不要買</li></ul><h1 id="3-結論"><a href="#3-結論" class="headerlink" title="3. 結論"></a>3. 結論</h1><p><img src="https://github.com/louis70109/ideas-tree/raw/master/images/466911640273551763.png"></p><p>上次玩快打也差不多五年前了，這代真的作得很優秀！推薦大加入坑玩玩看，會發現有很多不同的體驗唷！</p>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-%E5%89%8D%E8%A8%80&quot;&gt;1. 前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-%E4%BB%8B%E7%B4%B9&quot;&gt;2. 介紹&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#21-%E7%82%BA%E4%BB%80%E9%BA%BC%E8%A6%81%E8%B2%B7&quot;&gt;2.1. 為什麼要買？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#22-%E7%8F%BE%E4%BB%A3%E6%A8%A1%E5%BC%8F%E5%A5%BD%E9%A6%99%E5%95%8A%E4%B8%8D%E7%94%A8%E8%87%AA%E5%B7%B1%E5%B0%BB%E6%8C%89%E9%8D%B5&quot;&gt;2.2. 現代模式好香啊！不用自己尻按鍵&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#23-%E4%B8%80%E5%AE%9A%E8%A6%81%E5%A4%A7%E6%90%96%E5%97%8E%E6%90%96%E6%A1%BF--%E8%A1%8C%E4%B8%8D%E8%A1%8C&quot;&gt;2.3. 一定要大搖嗎？搖桿 🎮 行不行？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#24-%E6%A0%BC%E9%AC%A5%E9%81%8A%E6%88%B2--%E5%B8%B6%E4%BE%86%E7%9A%84%E6%8C%AB%E6%8A%98%E6%84%9F&quot;&gt;2.4. 格鬥遊戲 🥊 帶來的挫折感&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#25-%E5%BE%9E-100-%E5%88%B0-115-&quot;&gt;2.5. 從 10:0 到 11:5 🥈&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#26-%E5%85%B6%E4%BB%96&quot;&gt;2.6. 其他&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#3-%E7%B5%90%E8%AB%96&quot;&gt;3. 結論&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1. 前言&quot;&gt;&lt;/a&gt;1. 前言&lt;/h1&gt;&lt;p&gt;暨上篇分享的&lt;a href=&quot;https://nijialin.com/2023/07/29/why-i-buy-rog-ally/&quot;&gt;關於我衝動買了 ROG Ally 的夜晚 ⋯&lt;/a&gt;，分享買它的過程與設備狀態，其中買它最主要就是要打 LOL 跟&lt;a href=&quot;https://www.streetfighter.com/6/zh-hant&quot;&gt;快打旋風 6&lt;/a&gt; (今天的主角)，雖然因為硬體需求畫質不能開到頂，但可以隨身攜帶並且不佔空間就深得我心了 ✨，因此今天就來分享玩快打 6 的一些心得 👀&lt;/p&gt;</summary>
    
    
    
    <category term="遊戲" scheme="https://nijialin.com/categories/%E9%81%8A%E6%88%B2/"/>
    
    
    <category term="快打旋風" scheme="https://nijialin.com/tags/%E5%BF%AB%E6%89%93%E6%97%8B%E9%A2%A8/"/>
    
    <category term="ROG Ally" scheme="https://nijialin.com/tags/ROG-Ally/"/>
    
    <category term="搖桿" scheme="https://nijialin.com/tags/%E6%90%96%E6%A1%BF/"/>
    
  </entry>
  
  <entry>
    <title>寶可夢苦難日: 結局不是重點 重點是我爬不上大師啊</title>
    <link href="https://nijialin.com/2023/07/30/how-to-deploy-pokemon-line-bot/"/>
    <id>https://nijialin.com/2023/07/30/how-to-deploy-pokemon-line-bot/</id>
    <published>2023-07-30T07:21:56.000Z</published>
    <updated>2023-09-19T03:43:12.760Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/2023/coscup/2.jpg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我是 LINE Taiwan 的技術傳教士 Nijia (a.k.a 忍者)，這次很榮幸可以來 <a href="https://coscup.org/2023/zh-TW/session/VAHKVH">COSCUP 2023</a> 分享過年期間實做關於寶可夢 Side project 的一些心得，透過以下文章跟大家分享經驗談！</p><blockquote><p>本次分享簡報：<a href="https://speakerdeck.com/line_developers_tw/how-to-deploy-pokemon-line-bot">https://speakerdeck.com/line_developers_tw/how-to-deploy-pokemon-line-bot</a></p></blockquote><span id="more"></span><h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>以下介紹為個人業餘時間所開發的 Side Project 經驗分享～</p><h2 id="主要的功能流程圖"><a href="#主要的功能流程圖" class="headerlink" title="主要的功能流程圖"></a>主要的功能流程圖</h2><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/36feeffa79e3497ca7e5a04176ddc5ce?slide=9" title="寶可夢苦難日: 結局不是重點 重點是我爬不上大師啊" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><ul><li>使用 LINE Bot 作為操作介面</li><li>尋找指定寶可夢的個體值</li><li>運用 Flex Message 整理資訊</li><li>透過指定寶可夢，往下延伸操作<ul><li>尋找招式、隊友、道具、個性、努力值</li><li>Flex Message 皆可操作，到 wiki 查看細節功能</li></ul></li><li>錯誤回覆則用生成圖片替代</li><li>另外尋找 Pokemon Showdown 模擬器的對戰資訊來複習</li></ul><h2 id="為什麼要用-LINE-Bot-當介面？"><a href="#為什麼要用-LINE-Bot-當介面？" class="headerlink" title="為什麼要用 LINE Bot 當介面？"></a>為什麼要用 LINE Bot 當介面？</h2><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/36feeffa79e3497ca7e5a04176ddc5ce?slide=15" title="寶可夢苦難日: 結局不是重點 重點是我爬不上大師啊" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><ul><li>不用撰寫太多前端 code<ul><li>對 CSS 的 Flexbox 有概念尤佳</li></ul></li><li>呈上，可以驗證介面可行性</li><li>畫面很容易就做的漂亮 (<a href="https://developers.line.biz/flex-simulator/">Flex Message Simulator</a>)</li><li>人手一機，親朋好友都可以測試 (Single source)</li></ul><h2 id="突發事件：日本同事的黃金週，兩天內支援日文"><a href="#突發事件：日本同事的黃金週，兩天內支援日文" class="headerlink" title="突發事件：日本同事的黃金週，兩天內支援日文"></a>突發事件：日本同事的黃金週，兩天內支援日文</h2><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/36feeffa79e3497ca7e5a04176ddc5ce?slide=19" title="寶可夢苦難日: 結局不是重點 重點是我爬不上大師啊" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>我們在寫正規表達式(Regex)久了，大概知道[A-Za-z0-9]，但其他語系的 unicode 範圍都不一樣，就算中文我也不知道在哪！在這方面，只能依靠全民小助手(生成式 AI)來幫忙產生，雖然沒辦法驗證正確性，但語言基本上都固定的，就可以直接相信它了！</p><p>這邊就寫個基本的 Class 來驗證，收到訊息時先進來 match 看看，就可以驗證嚕！</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/36feeffa79e3497ca7e5a04176ddc5ce?slide=18" title="寶可夢苦難日: 結局不是重點 重點是我爬不上大師啊" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>最後就可以支援三個語言去驗證了(灑花)！可以到黃金週的分享會上跟日本同事分享成果了～～</p><h2 id="Python-小工具推薦"><a href="#Python-小工具推薦" class="headerlink" title="Python 小工具推薦"></a>Python 小工具推薦</h2><h3 id="Ruff"><a href="#Ruff" class="headerlink" title="Ruff"></a><a href="https://github.com/astral-sh/ruff">Ruff</a></h3><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/36feeffa79e3497ca7e5a04176ddc5ce?slide=22" title="寶可夢苦難日: 結局不是重點 重點是我爬不上大師啊" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>它是一個由 Rust 撰寫的 Python lint 工具，除了一般的 lint 規則之外，它也支援許多功能：</p><ul><li><a href="https://github.com/astral-sh/ruff-pre-commit">Pre-commit</a><ul><li>過去在寫 JavaScript 時有這功能，設定完 <code>.pre-commit-config.yaml</code> 在 commit 之前就會處理</li></ul></li><li>Github Actions<ul><li>可在 CI 階段協助確認，保障品質</li></ul></li><li>VScode<ul><li>支援在編輯器上安裝 plugin</li><li>個人常用 <code>autofix</code> 的功能，把沒用到的套件與行別處理掉，就不用自己動手了！</li></ul></li></ul><h2 id="testcontainer"><a href="#testcontainer" class="headerlink" title="testcontainer"></a>testcontainer</h2><p>Test Container 是一個 Java 的函式庫，支援 JUnit 來做測試，在跑測試時可以幫忙起個容器(Container)，並可以放上各式資料庫、Selenium 瀏覽器…等等可以放在 Docker 上面跑的內容，那 Test Container 很好的地方就是他也提供 Python 的解決方案(<a href="https://github.com/testcontainers/testcontainers-python">testcontainers&#x2F;testcontainers-python</a>)，讓我這個 Python 開發者可以有機會在 Docker 裡面很快地起一個 Container 來跑資料庫相關的整合測試。</p><ul><li>建立資料庫作真實的測試</li><li>不用 mock data 假裝過的很好(?)</li><li>隔離：可在 Docker 裡執行</li><li>省空間：執行完就刪除</li><li>普遍資料庫都支援</li></ul><blockquote><p><a href="https://nijialin.com/2021/11/24/python-testcontainer-fasstapi-database/">參考文章</a></p></blockquote><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>因為日常玩遊戲需要找很多資訊，我們透過 LINE Bot 可以很快速的把資訊都整理進去，開發時也會發現很多不同的方法與解決方案，運用網路上許多人整理好的資料可以更快速開發，推薦大家可以參考 GDD – Game Driven Development，推動自己解決日常所遇到的小問題！</p><blockquote><p>Side Project 佈署的小建議請參考： <a href="https://engineering.linecorp.com/zh-hant/blog/how-to-develop-side-project-into-public-cloud">【從零開始養】透過 Side Project 增加你的能見度！以 LINE Bot 為例</a></p></blockquote><h1 id="活動小結"><a href="#活動小結" class="headerlink" title="活動小結"></a>活動小結</h1><p>立即加入「LINE 開發者官方社群」官方帳號，就能收到第一手 Meetup 活動，或與開發者計畫有關的最新消息的推播通知。▼</p><p>「LINE 開發者官方社群」官方帳號 ID：<a href="https://qr-official.line.me/gs/M_908lugfe_BW.png">@line_tw_dev</a></p><img src="https://qr-official.line.me/gs/M_908lugfe_BW.png" width="200" height="200"><h1 id="關於「LINE-開發社群計畫」"><a href="#關於「LINE-開發社群計畫」" class="headerlink" title="關於「LINE 開發社群計畫」"></a>關於「LINE 開發社群計畫」</h1><p>LINE 於 2019 年開始在台灣啟動「LINE 開發社群計畫」，將長期投入人力與資源在台灣舉辦對內對外、線上線下的開發者社群聚會、徵才日、開發者大會等，已經舉辦 30 場以上的活動。歡迎讀者們能夠持續回來查看最新的狀況。詳情請看:</p><ul><li><a href="https://engineering.linecorp.com/zh-hant/blog/2021-line-tw-devrel/">2021 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/2020-line-tw-devrel/">2020 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/line-taiwan-developer-relations-2019-plan/">2019 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/line-taiwan-developer-relations-2019/">LINE Taiwan Developer Relations 2019 回顧與 2019 開發社群計畫報告</a></li></ul><style>  section.compact {    font-size: 150%    }  img[alt~="center"] {    display: block;    margin: 0 auto;  }</style>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2023/coscup/2.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;我是 LINE Taiwan 的技術傳教士 Nijia (a.k.a 忍者)，這次很榮幸可以來 &lt;a href=&quot;https://coscup.org/2023/zh-TW/session/VAHKVH&quot;&gt;COSCUP 2023&lt;/a&gt; 分享過年期間實做關於寶可夢 Side project 的一些心得，透過以下文章跟大家分享經驗談！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本次分享簡報：&lt;a href=&quot;https://speakerdeck.com/line_developers_tw/how-to-deploy-pokemon-line-bot&quot;&gt;https://speakerdeck.com/line_developers_tw/how-to-deploy-pokemon-line-bot&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="研討會" scheme="https://nijialin.com/categories/%E7%A0%94%E8%A8%8E%E6%9C%83/"/>
    
    
    <category term="LINE Bot" scheme="https://nijialin.com/tags/LINE-Bot/"/>
    
    <category term="Pokemon" scheme="https://nijialin.com/tags/Pokemon/"/>
    
  </entry>
  
  <entry>
    <title>關於我衝動買了 ROG Ally 的夜晚⋯</title>
    <link href="https://nijialin.com/2023/07/29/why-i-buy-rog-ally/"/>
    <id>https://nijialin.com/2023/07/29/why-i-buy-rog-ally/</id>
    <published>2023-07-29T15:28:36.000Z</published>
    <updated>2023-07-29T15:28:36.904Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/common.jpeg"></p><h1 id="規格-官網"><a href="#規格-官網" class="headerlink" title="規格 - 官網"></a>規格 - <a href="https://rog.asus.com/tw/gaming-handhelds/rog-ally/rog-ally-2023/">官網</a></h1><ul><li>AMD Ryzen™ Z1 Extreme</li><li>記憶體：16GB</li><li>硬碟：512GB​</li></ul><h1 id="為什麼要買它而不買-Steam-Deck-之類的？"><a href="#為什麼要買它而不買-Steam-Deck-之類的？" class="headerlink" title="為什麼要買它而不買 Steam Deck 之類的？"></a>為什麼要買它而不買 Steam Deck 之類的？</h1><ul><li>台北租屋需要省空間</li><li>回家也想打 LOL</li><li>同事幫忙測試 Steam 快打旋風可以玩</li><li>Windows 對我彈性還是比較高</li><li>Steam Deck 需要另外支援，可能比 ROG 去適應 Windows 問題在多一些些</li><li>大概 OLED 的 Switch 在重一點點</li></ul><h1 id="有哪些小缺點是需要注意的？"><a href="#有哪些小缺點是需要注意的？" class="headerlink" title="有哪些小缺點是需要注意的？"></a>有哪些小缺點是需要注意的？</h1><ul><li>只有一個 Type-C</li><li>要玩超級大作就要另外買外接顯卡 (3w+)</li><li>可能某天 ASUS 更新沒做好爆掉？</li><li>按鍵的感覺不耐操，修理可能很麻煩</li><li>512G 對很多人可能不夠，需要研究黑魔法</li></ul><span id="more"></span><h1 id="我怎麼買到的？"><a href="#我怎麼買到的？" class="headerlink" title="我怎麼買到的？"></a>我怎麼買到的？</h1><p><img src="https://github.com/louis70109/ideas-tree/raw/master/images/466056099347300386.png"></p><p>其實有同學是 ASUS 員工，但裡面也是都搶購一空，一般我們都會想說去 PCHome || MOMO 買，經過了兩三個禮拜煎熬後，我從公司的 <a href="https://buy.line.me/s/rog%20ally">LINE 購物</a>裡去搜尋 ROG Ally，轉到 <a href="https://tw.buy.yahoo.com/gdsale/ROG-Ally-%E9%81%8A%E6%88%B2%E6%8E%8C%E6%A9%9F-10641183.html?co_servername=LN_5bcf58770c4e2f81e30be0048a7adf71">Yahoo 購物商城</a>後就買到了！而且有都還是原價～ 👍 有時候還真的沒想到 😆</p><h1 id="按鈕配置"><a href="#按鈕配置" class="headerlink" title="按鈕配置"></a>按鈕配置</h1><p><img src="https://github.com/louis70109/ideas-tree/raw/master/images/466056084298924484.png"></p><p>按鍵據說參考 XBox 的排列，對於一個玩 Switch PS 的玩家初期需要習慣 (A 在下面，B 在最右邊)</p><h1 id="開機預設畫面"><a href="#開機預設畫面" class="headerlink" title="開機預設畫面"></a>開機預設畫面</h1><p><img src="https://github.com/louis70109/ideas-tree/raw/master/images/466090716851077266.png" alt="預設畫面"></p><p>開機預設會開起 ASUS 所開發的系統，主要是去適應掌機的應用，讓有用掌機玩的玩家不用大老遠去找開啟的地方。如果喜歡 PC 操作，直接關掉即可。</p><h2 id="關於擴充這東東"><a href="#關於擴充這東東" class="headerlink" title="關於擴充這東東"></a>關於擴充這東東</h2><p><img src="https://nijialin.com/images/2023/rog/1.png"></p><p>由於我要接的東西很多，對於 Windows 玩遊戲來說我也滿堅持要接網路線，因此買了相容 <a href="https://www.momoshop.com.tw/goods/GoodsDetail.jsp?i_code=11004814">Steam Deck 的擴充盒</a>，可以接三個 USB、原廠 Type-C 充電、網路線、HDMI，會使用到的裝置如下：</p><ul><li>滑鼠：用藍芽</li><li>鍵盤：USB-A</li><li>麥克風： USB-A (DC 用)</li><li>大搖： USB-A</li><li>鏡頭： USB-A (跟搖桿擇一，上課用)</li></ul><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>主要是基於移動性的考量購買它，同等價位下買的桌上型電腦其實也都還不錯，而且若在家裡買一台桌機，還很有可能被家人關機😆，主要還想把桌機拿去把我以前的 Mac 換回來用 😆</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/common.jpeg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;規格-官網&quot;&gt;&lt;a href=&quot;#規格-官網&quot; class=&quot;headerlink&quot; title=&quot;規格 - 官網&quot;&gt;&lt;/a&gt;規格 - &lt;a href=&quot;https://rog.asus.com/tw/gaming-handhelds/rog-ally/rog-ally-2023/&quot;&gt;官網&lt;/a&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AMD Ryzen™ Z1 Extreme&lt;/li&gt;
&lt;li&gt;記憶體：16GB&lt;/li&gt;
&lt;li&gt;硬碟：512GB​&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;為什麼要買它而不買-Steam-Deck-之類的？&quot;&gt;&lt;a href=&quot;#為什麼要買它而不買-Steam-Deck-之類的？&quot; class=&quot;headerlink&quot; title=&quot;為什麼要買它而不買 Steam Deck 之類的？&quot;&gt;&lt;/a&gt;為什麼要買它而不買 Steam Deck 之類的？&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;台北租屋需要省空間&lt;/li&gt;
&lt;li&gt;回家也想打 LOL&lt;/li&gt;
&lt;li&gt;同事幫忙測試 Steam 快打旋風可以玩&lt;/li&gt;
&lt;li&gt;Windows 對我彈性還是比較高&lt;/li&gt;
&lt;li&gt;Steam Deck 需要另外支援，可能比 ROG 去適應 Windows 問題在多一些些&lt;/li&gt;
&lt;li&gt;大概 OLED 的 Switch 在重一點點&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;有哪些小缺點是需要注意的？&quot;&gt;&lt;a href=&quot;#有哪些小缺點是需要注意的？&quot; class=&quot;headerlink&quot; title=&quot;有哪些小缺點是需要注意的？&quot;&gt;&lt;/a&gt;有哪些小缺點是需要注意的？&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;只有一個 Type-C&lt;/li&gt;
&lt;li&gt;要玩超級大作就要另外買外接顯卡 (3w+)&lt;/li&gt;
&lt;li&gt;可能某天 ASUS 更新沒做好爆掉？&lt;/li&gt;
&lt;li&gt;按鍵的感覺不耐操，修理可能很麻煩&lt;/li&gt;
&lt;li&gt;512G 對很多人可能不夠，需要研究黑魔法&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="3C" scheme="https://nijialin.com/categories/3C/"/>
    
    
    <category term="ROG" scheme="https://nijialin.com/tags/ROG/"/>
    
    <category term="Ally" scheme="https://nijialin.com/tags/Ally/"/>
    
    <category term="ASUS" scheme="https://nijialin.com/tags/ASUS/"/>
    
    <category term="掌機" scheme="https://nijialin.com/tags/%E6%8E%8C%E6%A9%9F/"/>
    
  </entry>
  
  <entry>
    <title>【從零開始養】讓 Public Cloud 增加你的能見度！</title>
    <link href="https://nijialin.com/2023/07/29/how-to-develop-side-project-into-public-cloud/"/>
    <id>https://nijialin.com/2023/07/29/how-to-develop-side-project-into-public-cloud/</id>
    <published>2023-07-29T08:26:06.000Z</published>
    <updated>2023-09-19T03:43:20.673Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/2023/coscup/1.jpg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>大家好，我是 LINE Taiwan 的技術傳教士 Nijia (a.k.a 忍者)，這次很榮幸可以來 <a href="https://coscup.org/2023/zh-TW/session/PT8VT7">COSCUP 2023 分享</a>業餘時間作 Side project 的一些心得，這次透過文章跟大家分享經驗談！</p><p>簡報：<a href="https://speakerdeck.com/line_developers_tw/how-to-develop-side-project-to-public-cloud">https://speakerdeck.com/line_developers_tw/how-to-develop-side-project-to-public-cloud</a></p><span id="more"></span><h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p>以下透過我這幾年收到也是我過去的各種疑問，分享給大家一些經驗談。</p><h2 id="為什麼要做-Side-Project-⁉️"><a href="#為什麼要做-Side-Project-⁉️" class="headerlink" title="為什麼要做 Side Project ⁉️"></a>為什麼要做 Side Project ⁉️</h2><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/778f40dcaf544983b4027d68aaccd9be?slide=5" title="【從零開始養】讓 Public Cloud 增加你的能見度！" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>這題在我接觸社群前，是很排斥的，其因怕被電、程式寫不乾淨、沒內容…etc，直到開始參與社群後與許多前輩請教相關問題，大家普遍都會建議透過以下四點，解決前面遇到的這些疑問：</p><ul><li>技術實驗</li><li>解決日常問題</li><li>累積作品</li><li>擦亮履歷</li></ul><p>我們會在開發 side project 時，參考許多網路上的專案，從 try &amp; error、看到各種不同寫法，來增進自己對於程式品質這件事，畢竟我認為萬是都是從「<strong>模仿</strong>」開始，沒有一開始就可以把東西寫的又好、、有創意、又有創意(如果有請介紹)，我也是透過 side project 逐步增進自己對於該領域的熟悉度，一旦熟悉了，很多東西都會越來越上手！</p><h2 id="我做完了！要怎麼放出去-佈署-呢？"><a href="#我做完了！要怎麼放出去-佈署-呢？" class="headerlink" title="我做完了！要怎麼放出去(佈署)呢？"></a>我做完了！要怎麼放出去(佈署)呢？</h2><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/778f40dcaf544983b4027d68aaccd9be?slide=10" title="【從零開始養】讓 Public Cloud 增加你的能見度！" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>從個人與身邊的大大們經驗，過往都會從許多的雲服務平台去架設自己的服務，初期都會先找許多的免費方案先操作，很多網路上的資源也都有許多的文件，讓大家在使用時可以更無痛，尤其身在台灣的我們其實有很多服務是很方便的，也有中文化，推薦大家創意點子做出來後，可以嘗試各種雲端平台，找到自己順手的使用～</p><h2 id="關於付錢開發-Side-Project-這檔事…"><a href="#關於付錢開發-Side-Project-這檔事…" class="headerlink" title="關於付錢開發 Side Project 這檔事…"></a>關於付錢開發 Side Project 這檔事…</h2><p>老實說這事我也掙扎很久，但當你有自己架設 Linux、Nginx、防火牆、DNS、proxy…etc，會知道花這些時間的成本是很大的(除非有興趣)，但一般來說，我們想的點子或是實驗性專案，初期流量不高的情況下，不需要這麼複雜的基礎設施，尤其像是在開發 LINE Bot 時，我們只需要一個有 HTTPS 的 callback URL 就好。</p><p>因此這個時候就可以善用這些雲平台，普遍會有的優點就是：</p><ul><li>流量計價，會有一定額度的免費</li><li>提供 HTTPS</li><li>不用處理基礎設施，安裝指令即可上線</li><li>依照不同雲服務，會提供各種好用的工具，例如：<ul><li>介面上即可設定觸發條件，整合更多的服務</li><li>跨平台搬家支援！ (Knative)</li></ul></li></ul><p>光這幾點，就足夠掏出魔法小卡下去使用了！不論是否為實驗行專案，或是公司專案要先上線，都推薦可以嘗試使用各種雲服務來把點子送進市場檢驗！</p><h2 id="不用-Dockerfile-也能佈署，真香！"><a href="#不用-Dockerfile-也能佈署，真香！" class="headerlink" title="不用 Dockerfile 也能佈署，真香！"></a>不用 Dockerfile 也能佈署，真香！</h2><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/778f40dcaf544983b4027d68aaccd9be?slide=16" title="【從零開始養】讓 Public Cloud 增加你的能見度！" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p><a href="https://buildpacks.io/">Buildpacks</a> 是一個<br>可以幫助開發者將應用程式部署到雲端平台上，最早是起源於 Heroku。</p><p>Buildpacks 可以自動偵測應用程式所需的語言、框架和相依性，並將其轉換成可執行的容器映像檔。讓開發者可以專注於撰寫程式碼，而不用擔心部署的細節。</p><p>同時也越來越多雲服務也陸續支援 Buildpacks，透過它，我們在初期就不用苦惱專案到底要怎麼上這些 Cloud，交給它，許多事情都會被神奇的魔法完成！</p><blockquote><p>那邊可以參考範例呢？歡迎參考我的專案: <a href="https://github.com/louis70109/FastAPI-Cloud-Run-Sample">FastAPI-Cloud-Run-Sample</a></p></blockquote><h2 id="我沒想法，可以做什麼題目？"><a href="#我沒想法，可以做什麼題目？" class="headerlink" title="我沒想法，可以做什麼題目？"></a>我沒想法，可以做什麼題目？</h2><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/778f40dcaf544983b4027d68aaccd9be?slide=25" title="【從零開始養】讓 Public Cloud 增加你的能見度！" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>身處台灣的你我，一定知道 LINE，因此可以先從 <a href="https://developers.line.biz/en/services/messaging-api/">LINE Bot</a> 開始著手，嘗試把些創意發想從這邊開始實作，省去許多的畫面開發的工作，先讓點子可以讓周遭朋友先試用！</p><p>另一方面，LINE Bot 與許多雲服務的特性很像，都是 Event-Driven 的特性，當 request 進來時才會觸發功能，在屬性相像的平台，就很適合把他們串接起來 🛠️！且許多的文章都有介紹要如何串接，大家可以到網路上搜尋一下許多鐵人賽文章喔！</p><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p>很高興在 COSCUP 2023 有機會實體跟這麼多有興趣的開發者分享我的經驗，希望透過每次的分享，讓軟體生態裡的各位能夠更了解不同階段遇到的挑戰，以及哪些服務能被更好的應用，如果喜歡這邊文章，歡迎分享給更多朋友知道唷！</p><p>明天(7&#x2F;30 11：20 ~ 11：50)還有一場演講 - 【<a href="https://coscup.org/2023/zh-TW/session/VAHKVH">寶可夢苦難日：結局不是重點，重點是我爬不上大師啊</a>】，歡迎大家持續關注，感謝大家！</p><h1 id="活動小結"><a href="#活動小結" class="headerlink" title="活動小結"></a>活動小結</h1><p>立即加入「LINE 開發者官方社群」官方帳號，就能收到第一手 Meetup 活動，或與開發者計畫有關的最新消息的推播通知。▼</p><p>「LINE 開發者官方社群」官方帳號 ID：<a href="https://qr-official.line.me/gs/M_908lugfe_BW.png">@line_tw_dev</a></p><img src="https://qr-official.line.me/gs/M_908lugfe_BW.png" width="200" height="200"><h1 id="關於「LINE-開發社群計畫」"><a href="#關於「LINE-開發社群計畫」" class="headerlink" title="關於「LINE 開發社群計畫」"></a>關於「LINE 開發社群計畫」</h1><p>LINE 於 2019 年開始在台灣啟動「LINE 開發社群計畫」，將長期投入人力與資源在台灣舉辦對內對外、線上線下的開發者社群聚會、徵才日、開發者大會等，已經舉辦 30 場以上的活動。歡迎讀者們能夠持續回來查看最新的狀況。詳情請看:</p><ul><li><a href="https://engineering.linecorp.com/zh-hant/blog/2021-line-tw-devrel/">2021 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/2020-line-tw-devrel/">2020 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/line-taiwan-developer-relations-2019-plan/">2019 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/line-taiwan-developer-relations-2019/">LINE Taiwan Developer Relations 2019 回顧與 2019 開發社群計畫報告</a></li></ul><style>  section.compact {    font-size: 150%    }  img[alt~="center"] {    display: block;    margin: 0 auto;  }</style>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2023/coscup/1.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;大家好，我是 LINE Taiwan 的技術傳教士 Nijia (a.k.a 忍者)，這次很榮幸可以來 &lt;a href=&quot;https://coscup.org/2023/zh-TW/session/PT8VT7&quot;&gt;COSCUP 2023 分享&lt;/a&gt;業餘時間作 Side project 的一些心得，這次透過文章跟大家分享經驗談！&lt;/p&gt;
&lt;p&gt;簡報：&lt;a href=&quot;https://speakerdeck.com/line_developers_tw/how-to-develop-side-project-to-public-cloud&quot;&gt;https://speakerdeck.com/line_developers_tw/how-to-develop-side-project-to-public-cloud&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="研討會" scheme="https://nijialin.com/categories/%E7%A0%94%E8%A8%8E%E6%9C%83/"/>
    
    
    <category term="LINE" scheme="https://nijialin.com/tags/LINE/"/>
    
    <category term="Google" scheme="https://nijialin.com/tags/Google/"/>
    
    <category term="GCP" scheme="https://nijialin.com/tags/GCP/"/>
    
  </entry>
  
  <entry>
    <title>【TECH FRESH 畢業分享會】原來實習有這些眉角？</title>
    <link href="https://nijialin.com/2023/07/16/line-tech-fresh-2022-graduation/"/>
    <id>https://nijialin.com/2023/07/16/line-tech-fresh-2022-graduation/</id>
    <published>2023-07-16T09:03:01.000Z</published>
    <updated>2023-07-16T09:03:01.930Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/2023/graduation/allfresh.jpg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>大家好！我們是 LINE Developer Relations 團隊，上一篇 <a href="https://engineering.linecorp.com/zh-hant/blog/line-tech-fresh-graduation-2023-introduction">TECH FRESH 畢業分享會：探索 2022 屆實習生的故事</a> 分享了為何推薦大家來參加年度 TECH FRESH 畢業分享會；在 6&#x2F;27 活動結束之後，也來跟各位分享一下當中的活動內容！</p><span id="more"></span><h1 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h1><p><img src="https://nijialin.com/images/2023/graduation/kv.png"></p><p>接下來提供每個議程的資訊，讓大家可以再次回味當時的議程！如果當天沒跟到，也可以透過以下文章的內容感受一下當天的內容唷！</p><h2 id="注意看-這兩個男人太狠了，從開發到部署一氣呵成"><a href="#注意看-這兩個男人太狠了，從開發到部署一氣呵成" class="headerlink" title="注意看!這兩個男人太狠了，從開發到部署一氣呵成"></a>注意看!這兩個男人太狠了，從開發到部署一氣呵成</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/8ptXkcKyRKM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><p>因應產品的特性，會有不同的軟體架構，而在 LINE 的研發工程團隊中的運作流程都會大同小異，透過 Agile 的方式帶領團隊去執行任務，不論是 LINE TODAY 或是 LINE TRAVEL 團隊，方式都會如下：</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/78c27d0933a947e98129f1a8b5fa5b4b?slide=7" title="注意看這兩個男人太狠了，從開發到部署一氣呵成！" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><ul><li>定義功能</li><li>開發</li><li>測試&#x2F;分析&#x2F;審查</li><li>QA 封裝測試</li><li>佈署與監控</li></ul><p>接下來 Peter 與 Leo 帶大家了解在各種情境下的測試會如何運作，並且透過各種自動化幫助同仁加速運行，透過常見的 User Story 來跑過一次，讓現場的同學們也都驚呼連連呢！</p><p>最後兩位個別分享了自己在當中推動功能讓大家知道，其實 TECH FRESH 若有評估過後的技術，且導入的可行性是夠高的，也是能透過工具把內部的流程調整的更順暢！</p><ul><li>Peter: Slack bot, 透過 bot 的方式幫助團隊在進版的時候有流程可以更快速的執行，透過工單的方式降低人工帶來的 effort。</li><li>Leo: 引入 <a href="https://github.com/AGWA/git-crypt">git-crypt</a>，讓運作中的環境參數可以被加密使用，讓這些密鑰們不會暴露在環境當中，增進團隊在資安的意識！</li></ul><h2 id="【查核】用謊言支撐起的虛構世界"><a href="#【查核】用謊言支撐起的虛構世界" class="headerlink" title="【查核】用謊言支撐起的虛構世界"></a>【查核】用謊言支撐起的虛構世界</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/dAPc8d5-sK4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><p>訊息無所不在，但往往訊息當中會夾帶許多不確定或是錯誤的資訊，此時透過 <a href="https://fact-checker.line.me/">LINE Fact Checker</a>可以幫助大家在過濾訊息時的判斷依據。</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/6b5ef8c180cb4187a24451a854caf18f?slide=6" title="【查核】用謊言支撐起的虛構世界" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>透過上述的方式，大家可以很輕鬆的與官方帳號互動，來了解每一則傳送你我群組之間的訊息是否含有疑慮。</p><h3 id="為什麼要訊息查證？"><a href="#為什麼要訊息查證？" class="headerlink" title="為什麼要訊息查證？"></a><a href="https://engineering.linecorp.com/zh-hant/blog/Tackle-the-infodemic-of-misinformation-from-LINE">為什麼要訊息查證？</a></h3><ul><li>數位時代的大量訊息：面對資訊氾濫的網路年代，訊息傳播快速，閱聽眾每天都在接收龐大的資訊量，然而如何判斷訊息真偽，不光是現今國際社會議題，更是全球公民終生課題。</li><li>防止不實訊息的傳播：不實訊息的傳播可能會導致公眾恐慌、對政府和企業的信任降低、社會穩定性下降等問題。因此，進行訊息查證可以防止不實訊息的傳播，保障社會的穩定與安全。</li><li>提高訊息素養：進行訊息查證可以幫助人們更好地了解和分辨不同訊息的真假，提高其訊息素養和媒體識讀能力，從而更好地適應數位時代的訊息環境。</li></ul><p>總之，進行訊息查證是維護公共利益和社會穩定重要的一環，也是提高大眾訊息素養的一大途徑。</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/6b5ef8c180cb4187a24451a854caf18f?slide=8" title="【查核】用謊言支撐起的虛構世界" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>除了文字之外，Jimmy 也分享近期 Fact Checker 增加的 OCR 功能，如果圖片中你也有發現有問題的文字，不妨也用 Fact Checker 看看吧！</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/6b5ef8c180cb4187a24451a854caf18f?slide=17" title="【查核】用謊言支撐起的虛構世界" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>下一部分 Angela 則是介紹在系統後面運作的原理，從 Kafka 與 ElasticSearch 介紹到整體架構，帶大家完整認識 Fact Checker 的架構，如果你也有在使用，或是作類似的 Side Project，或許都能參考看看喔！</p><h2 id="乘坐-TECH-FRESH-龍舟，比-Full-Stack-更滿的一條龍"><a href="#乘坐-TECH-FRESH-龍舟，比-Full-Stack-更滿的一條龍" class="headerlink" title="乘坐 TECH FRESH 龍舟，比 Full Stack 更滿的一條龍"></a>乘坐 TECH FRESH 龍舟，比 Full Stack 更滿的一條龍</h2><iframe width="560" height="315" src="https://www.youtube.com/embed/5Q_0aXUrzTg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/9c0de210b39044aab2cd6ae36f18ae99?slide=11" title="乘坐TECH FRESH 龍舟，比 Full Stack 更滿的一條龍" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>Erin 運用團隊的 DevOps 流程，帶大家了解在實習的這一年當中，是如何在身心平衡的情況下挑戰更多更不一樣的任務，不僅限於開發，甚至從演講機會、產品上線、維運..etc，實習過程中除了學習真實上線產品流程之外，也能幫助大家在銜接職場時，能夠更的駕輕就熟！</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/9c0de210b39044aab2cd6ae36f18ae99?slide=27" title="乘坐TECH FRESH 龍舟，比 Full Stack 更滿的一條龍" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>Jerry 則從大家常見的問題當中，從加入 LINE 購物 之後是如何一步探索，從 QA Automation + 前端的開發旅程到畢業分享會這天，從三個問題當中也分享了許多實用的經驗，相信作為 QA TECH FRESH，也能從了解實際產品的運作當中，是如何一步步到現今上線並且能夠穩定的交付給每一位用戶的產品。</p><h2 id="Enable-Resiliency-and-Efficiency-at-LINE-Invoice"><a href="#Enable-Resiliency-and-Efficiency-at-LINE-Invoice" class="headerlink" title="Enable Resiliency and Efficiency at LINE Invoice"></a>Enable Resiliency and Efficiency at <a href="https://invoice.line.me/">LINE Invoice</a></h2><iframe width="560" height="315" src="https://www.youtube.com/embed/GAaGIfP-IBA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/ebe522dc032b4d5aae136a4ff1d12e65?slide=6" title="Enable Resiliency and Efficiency at LINE Invoice " allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>LINE 發票管家在每月開獎時，總是會有許多流量湧入，後面需要許多的系統串接(<a href="https://www.youtube.com/watch?v=jsGLnaRuDXo">參考 TECHPULSE 影片</a>)。當中 Matt 介紹到，如果只是日常我們只會寫 CRUD 的話，那在這些分散式系統中，就很有可能會遇到 Race Condition、Unreliable connection…等等的問題，當中則介紹如何處理並且說明了幾個案例：Concurrent Programming、System Design。</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/ebe522dc032b4d5aae136a4ff1d12e65?slide=13" title="Enable Resiliency and Efficiency at LINE Invoice " allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>接著 Steve 說明後續的 CI&#x2F;CD 要怎麼處理才可以應付流量上的問題，從 Build-Deploy-處理流量…陸續說明，帶大家認識不論像是 ArgoCD 監控佈署上限狀態，也說明了如何透過 Treafik 分散流量至不同的 Pod 當中。</p><h2 id="Lightning-Talk"><a href="#Lightning-Talk" class="headerlink" title="Lightning Talk"></a>Lightning Talk</h2><p><img src="https://nijialin.com/images/2023/graduation/activity.jpg"></p><h3 id="我覺得草莓尬肉粽不行-從草莓肉粽了解整合測試的重要性"><a href="#我覺得草莓尬肉粽不行-從草莓肉粽了解整合測試的重要性" class="headerlink" title="我覺得草莓尬肉粽不行: 從草莓肉粽了解整合測試的重要性"></a>我覺得草莓尬肉粽不行: 從草莓肉粽了解整合測試的重要性</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/ADeW1QH6o_M" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/4c0f702e987345c4bd5a2427719f504a?slide=10" title="我覺得草莓尬肉粽不行: 從草莓肉粽了解整合測試的重要性" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>草莓好吃、肉粽也好吃，但為什麼兩個加在一起就大爆炸？因為他們沒過整合測試。整合測試是測試金字塔中的一環，它用於測試多個模組經過獨立測試通過後，在整併上是否會出現問題。</p><p>我想透過這樣的開頭讓大家有個概念測試的重要，並簡單介紹測試金字塔：單元測試、整合測試、端對端測試，並透過 refactor 一個測試的過程說明如何寫一個好讀的測試。</p><h3 id="專案綁粽伙-展現紗線在-Monorepo-的魔力"><a href="#專案綁粽伙-展現紗線在-Monorepo-的魔力" class="headerlink" title="專案綁粽伙!展現紗線在 Monorepo 的魔力"></a>專案綁粽伙!展現紗線在 Monorepo 的魔力</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/7N3dqkTI0ec" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><p>端午節時，家家戶戶都在忙著包粽子，但如果每個人都自己包自己的粽子，效率會很低，而且很難保證品質和口感的一致性。這時，如果把左鄰右舍和親朋好友的力量結合起來，共同包粽子，就可以大幅提高效率，還可以分享包粽子的樂趣，讓大家更有團隊合作的感覺。這就像是 Monorepo 和 Yarn Workspace 中的 package，把不同的程式碼專案合併在一起，讓團隊成員可以更輕鬆地協同工作，共享程式碼資源，提高開發效率。</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/b2e6a57d793f482dbe1a2c237891f987?slide=4" title="專案綁粽伙! 展現紗線在 Monorepo 的魔力" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><h3 id="發-PR-被同事「留言灌爆」-他只用這-2-方法解決，同事驚-輕鬆很多"><a href="#發-PR-被同事「留言灌爆」-他只用這-2-方法解決，同事驚-輕鬆很多" class="headerlink" title="發 PR 被同事「留言灌爆」! 他只用這 2 方法解決，同事驚:輕鬆很多"></a>發 PR 被同事「留言灌爆」! 他只用這 2 方法解決，同事驚:輕鬆很多</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/Ow7_AcDbnog" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><p>在公司和他人合作開發，版本控制是不可或缺的工具之一，發 Pull Request 跟 Code Review 也是軟體開發中習以為常之事。但在經驗不足或不了解專案的狀況下，PR 就可能收到大量的留言與修改建議。</p><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/0c66fb5b968c447e98c03945b3147a9e?slide=7" title="發PR被同事「留言灌爆」! 他只用這2方法解決，同事驚:輕鬆很多" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>這次議程我會介紹自己的 PR 被留言超過百則 comment 的經驗，並且介紹發 PR 時應該注意的事情，以減少 PR 擁有者和 Code Reviewer 的負擔。</p><h3 id="Wakuwaku-原來自然語言可以這樣玩"><a href="#Wakuwaku-原來自然語言可以這樣玩" class="headerlink" title="Wakuwaku!!!!!! 原來自然語言可以這樣玩"></a>Wakuwaku!!!!!! 原來自然語言可以這樣玩</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/Va7NPz8v1F0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><iframe class="speakerdeck-iframe" frameborder="0" src="https://speakerdeck.com/player/26ef13373ead44cf8b0908f41ce2c6a2?slide=5" title="Wakuwaku!!!!!! 原來自然語言可以這樣玩" allowfullscreen="true" style="border: 0px; background: padding-box padding-box rgba(0, 0, 0, 0.1); margin: 0px; padding: 0px; border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0px 5px 40px; width: 100%; height: auto; aspect-ratio: 560 / 314;" data-ratio="1.78343949044586"></iframe><p>分享在 Data dev team 裡負責 NLP process，從 LLM 介紹，說明在外面已經有了這麼多平台(ex: Hugging face)有方便的工具，為什麼還需要自己弄呢？從資料隱密性、私有領域問題下去分析，但由於在機器學習上，時常測試目前模型的狀態，就可能需要花費很多時間，並且同時又同時需要安平衡課業上的時間，Danny 是如何做得到呢？一起到影片上看看吧！</p><h3 id="學長姐等來共-Panel-Talk"><a href="#學長姐等來共-Panel-Talk" class="headerlink" title="學長姐等來共 - Panel Talk"></a>學長姐等來共 - Panel Talk</h3><iframe width="560" height="315" src="https://www.youtube.com/embed/bUJb781XIFw" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><p>相信很多人對於到軟體公司實習時都會有許多顧慮，不論是時間分配、過程中到底會發生什麼事、對未來真的有幫助嗎？..等等的問題，這次的畢業分享會中邀請了過去也曾為實習生的三位同學 Jerry, Una, Shandy 來跟大家分享以下的內容：</p><ul><li>為什麼你不打算留下來呢？</li><li>對於實習這件事，你會有什麼建議給現場同學呢？ 實習過程中最痛苦的事情是？</li><li>參加過那些活動？這裡的經驗幫助你在學校&#x2F;其他工作的幫忙？</li></ul><h1 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h1><p><img src="https://nijialin.com/images/2023/graduation/all.jpg"></p><p>不論同學們是續留或是有其他規劃，我們都衷心感謝與祝福每位同學在 LINE 期間的付出，相信透過實習能夠讓各位更了解在大型組織中的運作流程，也讓各位在往後的職涯規劃上能有個借鏡來參考！當然，看到這邊的各位若對於 TECH FRESH 想要了解更多的內容，歡迎參考部落格內的更多文章，謝謝大家！</p><p><img src="https://nijialin.com/images/2023/graduation/all_fresh.jpg"></p><h1 id="活動小結"><a href="#活動小結" class="headerlink" title="活動小結"></a>活動小結</h1><p>立即加入「LINE 開發者官方社群」官方帳號，就能收到第一手 Meetup 活動，或與開發者計畫有關的最新消息的推播通知。▼</p><p>「LINE 開發者官方社群」官方帳號 ID：<a href="https://qr-official.line.me/gs/M_908lugfe_BW.png">@line_tw_dev</a></p><img src="https://qr-official.line.me/gs/M_908lugfe_BW.png" width="200" height="200"><h1 id="關於「LINE-開發社群計畫」"><a href="#關於「LINE-開發社群計畫」" class="headerlink" title="關於「LINE 開發社群計畫」"></a>關於「LINE 開發社群計畫」</h1><p>LINE 於 2019 年開始在台灣啟動「LINE 開發社群計畫」，將長期投入人力與資源在台灣舉辦對內對外、線上線下的開發者社群聚會、徵才日、開發者大會等，已經舉辦 30 場以上的活動。歡迎讀者們能夠持續回來查看最新的狀況。詳情請看:</p><ul><li><a href="https://engineering.linecorp.com/zh-hant/blog/2021-line-tw-devrel/">2021 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/2020-line-tw-devrel/">2020 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/line-taiwan-developer-relations-2019-plan/">2019 年 LINE 開發社群計畫活動時程表</a></li><li><a href="https://engineering.linecorp.com/zh-hant/blog/line-taiwan-developer-relations-2019/">LINE Taiwan Developer Relations 2019 回顧與 2019 開發社群計畫報告</a></li></ul><style>  section.compact {    font-size: 150%    }  img[alt~="center"] {    display: block;    margin: 0 auto;  }</style>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2023/graduation/allfresh.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;大家好！我們是 LINE Developer Relations 團隊，上一篇 &lt;a href=&quot;https://engineering.linecorp.com/zh-hant/blog/line-tech-fresh-graduation-2023-introduction&quot;&gt;TECH FRESH 畢業分享會：探索 2022 屆實習生的故事&lt;/a&gt; 分享了為何推薦大家來參加年度 TECH FRESH 畢業分享會；在 6&amp;#x2F;27 活動結束之後，也來跟各位分享一下當中的活動內容！&lt;/p&gt;</summary>
    
    
    
    <category term="LINE" scheme="https://nijialin.com/categories/LINE/"/>
    
    
    <category term="LINE" scheme="https://nijialin.com/tags/LINE/"/>
    
    <category term="TECH FRESH" scheme="https://nijialin.com/tags/TECH-FRESH/"/>
    
    <category term="實習" scheme="https://nijialin.com/tags/%E5%AF%A6%E7%BF%92/"/>
    
  </entry>
  
  <entry>
    <title>【零到三的旅程】🥷👌🚶‍♂️📖</title>
    <link href="https://nijialin.com/2023/06/25/nijia-review-year-3-at-LINE/"/>
    <id>https://nijialin.com/2023/06/25/nijia-review-year-3-at-LINE/</id>
    <published>2023-06-25T07:48:13.000Z</published>
    <updated>2023-06-25T07:48:14.006Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://nijialin.com/images/2023/people.jpeg"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇紀錄著近期對於自己來台北工作三年的一些經驗分享，用比較流水帳的方式紀錄著(絕沒出動 GPT😆)。除了幫自己紀錄這幾年來的經驗，若有讀者也想來北部工作，或許這篇的內容可以參考看看！</p><span id="more"></span><blockquote><p>開始前播一下撰文當下聽到的歌：</p></blockquote><iframe width="560" height="315" src="https://www.youtube.com/embed/LbiWaeLdqeA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe><h2 id="30-了，也是該吃保養品的年紀-XD"><a href="#30-了，也是該吃保養品的年紀-XD" class="headerlink" title="30 了，也是該吃保養品的年紀 XD"></a>30 了，也是該吃保養品的年紀 XD</h2><p><img src="https://nijialin.com/images/2023/little_horse.gif" alt="小馬怪"></p><p>從 2022 年中健檢完發現好像有很多紅字，雖然後續複檢是都沒有，但年紀好像也到了，該是開始吃 B 群、魚油、發泡錠的年紀了 🥲(從 COVID 之後發現自己越來越容易體虛)，打球也感覺到年紀帶來的衝擊 😅，有時候真的不能鐵齒，該休息時就得休息了 😆(身體健康還是比較重要的！)</p><h2 id="30-歲前找到願意帶你的導師"><a href="#30-歲前找到願意帶你的導師" class="headerlink" title="30 歲前找到願意帶你的導師"></a>30 歲前找到願意帶你的導師</h2><blockquote><p>來自前同事阿尼的人生體悟</p></blockquote><p>來台北之後學到了許多專案管理、時程規劃、流程制定、做事原則，從初期做事時都搞不清楚做這些到底目的為何，到現在要能跟同事解釋每個流程脈絡與目的也是真的很不容易。除了花很多時間整理每個每次活動&#x2F;會議中提出的想法，也是 Evan 花了很多時間解釋源由與讓我去思考自己到底在講什麼 😆，讓我不是只有拿答案做事，而是要理解當中的原理。</p><p>過程中也都要針對專案去建立頁面、各種會議文件、行事曆、Single Source 的重要性…etc，雖然每次建立這些都超～級～花時間，但其實在往後回去看文件時才能感覺到當初辛苦的價值，</p><h2 id="專案管理上的成長"><a href="#專案管理上的成長" class="headerlink" title="專案管理上的成長"></a>專案管理上的成長</h2><p>從一開始進來時，接到任務時先從過去的樣板去管理&#x2F;設定專案時程，然後去跟各單位諮詢並完成它。到後來開始接下研討會的舉辦，跟行銷、公關、設計師、會計、採購、資安、活動公司…討論，決定每個東西的優先順序，並且持續確認專案時程的可行性。也是很感謝公司有給這次舉辦機會，讓我能在這時期強化自己的組織與規劃能力 🎉</p><blockquote><p>從中也才知道老闆說的「無矩不成方圓」，做專案的過程中若沒有規矩，會讓很多事情亂了序，沒辦法好好的做下去。當然制定規則時，也要把成員屬性都一起考慮進去，才會發揮團隊的特色！</p></blockquote><h3 id="我以為的多緒執行能力，其實只是很會多次單緒切換"><a href="#我以為的多緒執行能力，其實只是很會多次單緒切換" class="headerlink" title="我以為的多緒執行能力，其實只是很會多次單緒切換"></a>我以為的多緒執行能力，其實只是很會多次單緒切換</h3><p>在做專案過程，隨著每個 milestone 越近時，許多東西都要在同時處理，A 回就要跟 B 確認，C 也在問什麼時候好，因此手腳都要很快趕快把事情完成。</p><p>在當中旁觀時會認為對方好像能同時處理很多事情，但其實我們都沒辦法同時做好幾件事，這時期只是很快速的資訊切換，因此也是為什麼很容易在這時間有掉東西&#x2F;訊息的問題。後來也學乖了，只要在東西同一時間進來時，要先讓自己冷靜一下，排出東西的優先權，評估之後在開始做事，才不會害的自己四不像，最後在東怪西怪。</p><h3 id="從日常生活中培養專案管理能力-上班前，下班後的時間管理"><a href="#從日常生活中培養專案管理能力-上班前，下班後的時間管理" class="headerlink" title="從日常生活中培養專案管理能力 - 上班前，下班後的時間管理"></a>從日常生活中培養專案管理能力 - 上班前，下班後的時間管理</h3><h4 id="上班前"><a href="#上班前" class="headerlink" title="上班前"></a>上班前</h4><p>過去的工作都是六點下班，下班後的時間可以參考下圖：</p><script defer class="speakerdeck-embed" data-slide="22" data-id="95e302aa691f4150805d8bd57f5467ed" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script><p>二月大活動結束後開始審視時間，發現自己下班後的時間有點壓的太緊，很常會弄不好把自己搞的很累，後來轉變了一個部分，就是每週約有三～四天會早上 7:30 跟同事一起健身房，把時間改到早上之後，發現上班前運動反而精神會好一些，也剛好本身是一個慢熱的體質，任何需要高度專注的項目，都需要一段準備時間，因此後來把運動時間改到早上，以目前來說還算是滿好的一個調整！</p><h4 id="下班後"><a href="#下班後" class="headerlink" title="下班後"></a>下班後</h4><p>身為北漂族，下班都需要各種自理，不論是吃飯、洗&#x2F;晾&#x2F;折衣服、coding、打遊戲、英文課、看廢片、洗澡、整理包包…都需要好好的安排，經常一個搞不好晚上可能還比早上忙，一般來說選其中三、四樣晚上的時間基本上就沒了 🥹</p><p>通常來說現在分配動&#x2F;靜態的部分各別一天效果還不錯，或許可以繼續維持 😗</p><ul><li>吃飯、coding、英文課、洗澡</li><li>吃飯、洗衣服、打遊戲、洗澡、整理包包</li></ul><blockquote><p>但有時候也是會失控沒管好當晚亂七八糟 😅 把打遊戲跟英文課放在同一天真的是腦袋會切不過來</p></blockquote><h2 id="檢視自己的工作狀態"><a href="#檢視自己的工作狀態" class="headerlink" title="檢視自己的工作狀態"></a>檢視自己的工作狀態</h2><p>在工作上都會有兩週一次的 1on1，雖然有時會覺得密集，但在這過程中也是逼自己要檢視&#x2F;整理出近期狀態(有時後也不知道自己在講什麼)，並且可以知道自己近期做的事情有沒有符合部門的目標，才不會埋頭苦幹迷路，搞的人財兩失(績效變差)。</p><h2 id="定期檢視自己的身心狀態"><a href="#定期檢視自己的身心狀態" class="headerlink" title="定期檢視自己的身心狀態"></a>定期檢視自己的身心狀態</h2><p>除了工作，隻身在外，很容易因為環境、氣候、壓力狀態影響到自己的身心，進而影響到身邊的人，因此該犒賞自己的時候千萬別手軟、該運動的時候就要出去、該健檢就去，把這些東西當作是一個投資，延長自己的工作熱情跟長度比較好。</p><h2 id="把東西推薦給適合的人使用"><a href="#把東西推薦給適合的人使用" class="headerlink" title="把東西推薦給適合的人使用"></a>把東西推薦給適合的人使用</h2><p>許多時候我們會在 open source 中找到好東西，但適不適合組織其實是需要很多的討論以及了解實際開發時所遇到的問題。組織運行都會有既定的文化在那，因此找到適合的時機點是個很重要的課題，自己也是需要多花點時間去著墨跟觀察前輩們的作法。</p><p>如近期超紅的 ChatGPT，在試玩時我們都會覺得真的超猛，覺得身邊的人都應該去了解，但..他們真的需要嗎？</p><p>不論是何種傳教士，是要把自己信仰的思想分享出去，但每個人都有不同的家庭背景、成長環境、經歷，若在對方沒興趣的情況下，一直推坑對方，其實也是間接在浪費對方的腦袋跟時間，許多時候需要學會觀察大家近期的特性，進而找到適合的時間點導入，才會讓做的事情事半功倍。</p><h2 id="時刻提醒自己"><a href="#時刻提醒自己" class="headerlink" title="時刻提醒自己"></a>時刻提醒自己</h2><h3 id="1-別被情緒影響判斷"><a href="#1-別被情緒影響判斷" class="headerlink" title="1. 別被情緒影響判斷"></a>1. 別被情緒影響判斷</h3><p>有時候聽到跟自己觀念不符合，或是被不合理要求時，可能腦中會有很多的火氣各種燒，但在這時候下的判斷很容易都是錯的，這三年中我也很常被提點：「當聽到一件事情馬上就有的第一個想做的想法，通常判斷會是錯的。」雖然不能以偏概全，但仔細思考後換位想，如果人家這樣對你時會怎樣想呢？因此經歷過這些日子的調教，我會在每件事情要發生前，盡可能的思考看是否有哪些細節&#x2F;事情沒做到，或許在當下不會影響太多，但我相信隨著時間的累積，如果做的好它會帶著你飛的！</p><blockquote><p>🥷 要罵事情解決再罵，先把事情處理好比較重要～</p></blockquote><h3 id="2-打字-x2F-對話中盡量用名詞替代「你我他」"><a href="#2-打字-x2F-對話中盡量用名詞替代「你我他」" class="headerlink" title="2. 打字&#x2F;對話中盡量用名詞替代「你我他」"></a>2. 打字&#x2F;對話中盡量用名詞替代「你我他」</h3><p>很多時候它們會有些指向性壓迫的感覺，我認為在對談的過程中(實體 or 通訊軟體)，把對方的名稱放進去會是一個更舒適的選擇，別省下打那幾個字或是思考對方名字的時間，讓這次的對話可以更舒適的結束。相信累積久了，大家也會覺得壓迫感沒那麼重，比較不會防禦喔！</p><h3 id="3-我們都想改變點什麼，但反而不能急"><a href="#3-我們都想改變點什麼，但反而不能急" class="headerlink" title="3. 我們都想改變點什麼，但反而不能急"></a>3. 我們都想改變點什麼，但反而不能急</h3><p>當我們到一個新環境時，可能會覺得工作流程複雜、工具老舊、規矩很多、風氣不好…等等的疑問，血氣方剛的年紀都會覺得應該要改快做點什麼改善環境。但這時候反而要思考你不喜歡的東西，為什麼會存在在這，勢必有它的原因，導入之後對大家個 effort 是什麼。盡可能的全盤考慮+討論後再執行，有了這些討論，也更能知道團隊的大家考量點是什麼，藉此調整計畫，讓它在適合的時間點加入，也不會讓大家覺得自己是一股腦衝刺！</p><h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>文章的最後，我覺得對於自己來北部學會最多的就是「<code>對於決定的判斷</code>」，時常我會因為無法決定某些事情，而花很多時間在猶豫，經歷過專案的大洗禮，現在對於<code>時間概念</code>、<code>執行可行性</code>、<code>行事曆追蹤</code>的掌握度又更高了一些，希望接下來在遇到更多的專案內容時，能夠把所學的這些技能好好的運用上去，讓專案以及合作的人都能夠更順暢的完成事情！</p><style>  section.compact {    font-size: 150%    }  img[alt~="center"] {    display: block;    margin: 0 auto;  }</style>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://nijialin.com/images/2023/people.jpeg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本篇紀錄著近期對於自己來台北工作三年的一些經驗分享，用比較流水帳的方式紀錄著(絕沒出動 GPT😆)。除了幫自己紀錄這幾年來的經驗，若有讀者也想來北部工作，或許這篇的內容可以參考看看！&lt;/p&gt;</summary>
    
    
    
    <category term="學習紀錄" scheme="https://nijialin.com/categories/%E5%AD%B8%E7%BF%92%E7%B4%80%E9%8C%84/"/>
    
    
    <category term="DevRel" scheme="https://nijialin.com/tags/DevRel/"/>
    
    <category term="個人成長" scheme="https://nijialin.com/tags/%E5%80%8B%E4%BA%BA%E6%88%90%E9%95%B7/"/>
    
  </entry>
  
</feed>
